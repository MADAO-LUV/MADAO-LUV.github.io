<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MADAO</title>
  <icon>https://www.gravatar.com/avatar/ae2a6c03a9e90f5d585dcd23ed6f88c8</icon>
  <subtitle>BOSS SAMA拜托了!</subtitle>
  <link href="https://madao-luv.github.io/atom.xml" rel="self"/>
  
  <link href="https://madao-luv.github.io/"/>
  <updated>2024-04-23T02:44:26.255Z</updated>
  <id>https://madao-luv.github.io/</id>
  
  <author>
    <name>MADAO</name>
    <email>3335075714@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>flutter类的细节</title>
    <link href="https://madao-luv.github.io/posts/9bcefa22.html"/>
    <id>https://madao-luv.github.io/posts/9bcefa22.html</id>
    <published>2024-04-21T16:26:25.000Z</published>
    <updated>2024-04-23T02:44:26.255Z</updated>
    
    <content type="html"><![CDATA[<p class='p center logo large'>Flutter近日学习所遇到的问题</p><p class='p center h3'>是关于flutter里遇到的抽象类里面，关于继承和多态的应用。其中的语言是关于dart</p><span class='p center h3'>首先，我创建一个class Person的类</span><p class='p center h3'>1.第一种:继承---class Man extengds Person 对于它而言便是Person里面的方法以及属性都需要实现， 而第二种便是:多态---class Man implements Person，对于它来说是来实现接口的，若各位学有余力可以去自学一下"设计模式"这门课，废话不多说，我们来具体看看它的具体代码实现</p><p>比如说这个代码:<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    eat();</span><br><span class="line">    run(); <span class="comment">//我在这里进行了抽象函数的设定</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//然后我定义一个子类叫作man</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="keyword">extends</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    eat()&#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;我吃饭了&quot;</span>); <span class="comment">//必须是具体的实现操作</span></span><br><span class="line">    &#125;</span><br><span class="line">    run()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;吃完饭运动一下&quot;</span>); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//这个就是类的继承</span></span><br></pre></td></tr></table></figure></p><p>然后就是类的继承<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    eat();</span><br><span class="line">    run();</span><br><span class="line"></span><br><span class="line">&#125;<span class="comment">//这里我们是封装这个包，可以使用import方法引入</span></span><br></pre></td></tr></table></figure><br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//下面就是举例子如何引入封装</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;Person.h&quot;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="title">implement</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    eat()&#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;fa&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    run()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;man&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>这里便是多态的实现，我创建了一个接口，所以便用了implement的方法来实现函数的创建</p>]]></content>
    
    
    <summary type="html">flutter里抽象类的解释</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>随心一听</title>
    <link href="https://madao-luv.github.io/posts/5e52f62.html"/>
    <id>https://madao-luv.github.io/posts/5e52f62.html</id>
    <published>2024-03-21T16:14:58.000Z</published>
    <updated>2024-04-16T15:51:24.181Z</updated>
    
    <content type="html"><![CDATA[<p><strong>just  listen  </strong>龙与虎</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;just  listen  
&lt;/strong&gt;龙与虎&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://madao-luv.github.io/posts/0.html"/>
    <id>https://madao-luv.github.io/posts/0.html</id>
    <published>2024-03-19T16:35:56.179Z</published>
    <updated>2024-03-19T16:43:24.996Z</updated>
    
    <content type="html"><![CDATA[{"name":"MADAO`Blog","short_name":"夜见山","theme_color":"#3b70fc","background_color":"#3b70fc","display":"standalone","scope":"/","start_url":"/","icons":[{"src":"/img/siteicon/16.png","sizes":"16x16","type":"image/png"},{"src":"/img/siteicon/32.png","sizes":"32x32","type":"image/png"},{"src":"/img/siteicon/48.png","sizes":"48x48","type":"image/png"},{"src":"/img/siteicon/64.png","sizes":"64x64","type":"image/png"},{"src":"/img/siteicon/128.png","sizes":"128x128","type":"image/png"},{"src":"/img/siteicon/144.png","sizes":"144x144","type":"image/png"},{"src":"/img/siteicon/512.png","sizes":"512x512","type":"image/png"}],"splash_pages":null}]]></content>
    
    
      
      
    <summary type="html">{&quot;name&quot;:&quot;MADAO`Blog&quot;,&quot;short_name&quot;:&quot;夜见山&quot;,&quot;theme_color&quot;:&quot;#3b70fc&quot;,&quot;background_color&quot;:&quot;#3b70fc&quot;,&quot;display&quot;:&quot;standalone&quot;,&quot;scope&quot;:&quot;/&quot;,&quot;start_url&quot;:</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://madao-luv.github.io/posts/4a17b156.html"/>
    <id>https://madao-luv.github.io/posts/4a17b156.html</id>
    <published>2024-03-18T16:23:00.968Z</published>
    <updated>2024-03-19T09:47:12.903Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>

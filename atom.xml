<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MADAO</title>
  <icon>https://www.gravatar.com/avatar/ae2a6c03a9e90f5d585dcd23ed6f88c8</icon>
  <subtitle>BOSS SAMA拜托了!</subtitle>
  <link href="https://madao-luv.github.io/atom.xml" rel="self"/>
  
  <link href="https://madao-luv.github.io/"/>
  <updated>2024-04-30T06:35:32.413Z</updated>
  <id>https://madao-luv.github.io/</id>
  
  <author>
    <name>MADAO</name>
    <email>3335075714@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>STM32的一些必备知识与自我认知</title>
    <link href="https://madao-luv.github.io/posts/b0e2bb20.html"/>
    <id>https://madao-luv.github.io/posts/b0e2bb20.html</id>
    <published>2024-04-29T15:32:58.413Z</published>
    <updated>2024-04-30T06:35:32.413Z</updated>
    
    <content type="html"><![CDATA[<p class='p center logo large'>STM32的主要外设</p><p><strong>1.NVIC—-嵌套向量中断控制器    </strong>2.SysTick—-系统滴答定时器: 它们是内核里的外设<br><strong>3.RCC—-复位和时钟控制 这个外设十分重要,因为其他的外设再上电的情况下默认是没有时钟的，那么不给时钟的情况下，操作其他外设是无效的，外设不会工作,因此我们需要RCC来配置相应外设的时钟—-使能其时钟    </strong>4.GPIO—-通用IO口(用于输入和输出),5.AFIO—-复用IO口(因为每个端口除了GPIO口所定义的功能以外，还有别的功能也可以在该端口实现，就是通过AFIO进行配置，复用的意思就是再次使用-个人理解),其次还有中断端口配置<br><strong>6.EXTI—-外部中断，当引脚有电平变化时,触发中断  </strong>7.TIM—-定时器(十分重要,因为是经常使用,功能最大的外设)—-用处:生成PWM波形,测频率,配置成专用编码器接口<br><strong>8.ADC—-模数转化器(Analog Digital Conversioner)—-举个例子:汽车发动机的冷冻装置,热电偶的原理  </strong>9.DMA—-直接内存访问(类似于STM32F103C8的小秘书,帮助STM32F103C8完成大量数据的搬运,减轻STM32F103C8的压力)<br><strong>10.USART—-同步/异步串口通信(实际上用异步串口比较多),这个可以用于串口通信,串口下载程序  </strong>11.I2C通信,以及12.SPI通信,以及13.CAN通信(这个应用于汽车领域较多),14.USB通信<br><strong>15.RTC—-实时时钟(原理是时间戳秒数的总数来计算—-年,月,日,时,分,秒),可以做车载时钟  </strong>16.PWR—-电源控制(三种模式:1.睡眠模式,2.停止模式,3.待机模式)<br><strong>17.IWDG—-独立看门狗,WWDG—-窗口看门狗,防止程序进入死循环  </strong>18.BKP—-备份寄存器,可以与RTC相配合实现电子时钟效果<br><strong>19.DAC—-(Digital Analog conversion)数模转化器  </strong>20.SDIO—-SD步接口<br><strong>21.USB OTG—-USB主机接口  </strong>22.FSMC—-可变静态存储控制器  </p>]]></content>
    
    
    <summary type="html">基础外设与解释</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>STM32知识每日更新</title>
    <link href="https://madao-luv.github.io/posts/4055ee82.html"/>
    <id>https://madao-luv.github.io/posts/4055ee82.html</id>
    <published>2024-04-28T14:33:55.300Z</published>
    <updated>2024-04-29T16:02:06.766Z</updated>
    
    <content type="html"><![CDATA[<p>**Time:2024.4.28<br><p class='p center h3'>1.GPIO端口进行编程作为模拟输入功能，内部操作包括:1.输出缓存器被禁止 2.施密特触发器输入停用，I/O引脚的每个模拟输入的功耗变为零 3.弱上拉和下拉电阻被关闭 4.对输入数据寄存器的读访问值为'0'</p><br><p class='p center h3'>2.stm32GPIO支持4种输出模式:开漏输出，开漏复用输出，推挽输出，推挽复用输出。 Tips: 下拉只能用来输入'</p></p><ol><li>STM32GPIO支持三种最大翻转速度:2MHz,10Mhz,50Mhz，所以最大不能超过50Mhz， Tips:不存在GPIO_IN_INIT_LOW,实际上当引脚设置为输入时，其状态对应当时引脚外部的电平状态。</li></ol>]]></content>
    
    
    <summary type="html">一些STM32的知识</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>flutter类的细节</title>
    <link href="https://madao-luv.github.io/posts/9bcefa22.html"/>
    <id>https://madao-luv.github.io/posts/9bcefa22.html</id>
    <published>2024-04-21T16:26:25.000Z</published>
    <updated>2024-04-23T02:44:26.255Z</updated>
    
    <content type="html"><![CDATA[<p class='p center logo large'>Flutter近日学习所遇到的问题</p><p class='p center h3'>是关于flutter里遇到的抽象类里面，关于继承和多态的应用。其中的语言是关于dart</p><span class='p center h3'>首先，我创建一个class Person的类</span><p class='p center h3'>1.第一种:继承---class Man extengds Person 对于它而言便是Person里面的方法以及属性都需要实现， 而第二种便是:多态---class Man implements Person，对于它来说是来实现接口的，若各位学有余力可以去自学一下"设计模式"这门课，废话不多说，我们来具体看看它的具体代码实现</p><p>比如说这个代码:<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    eat();</span><br><span class="line">    run(); <span class="comment">//我在这里进行了抽象函数的设定</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//然后我定义一个子类叫作man</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="keyword">extends</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    eat()&#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;我吃饭了&quot;</span>); <span class="comment">//必须是具体的实现操作</span></span><br><span class="line">    &#125;</span><br><span class="line">    run()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;吃完饭运动一下&quot;</span>); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//这个就是类的继承</span></span><br></pre></td></tr></table></figure></p><p>然后就是类的继承<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    eat();</span><br><span class="line">    run();</span><br><span class="line"></span><br><span class="line">&#125;<span class="comment">//这里我们是封装这个包，可以使用import方法引入</span></span><br></pre></td></tr></table></figure><br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//下面就是举例子如何引入封装</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;Person.h&quot;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="title">implement</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    eat()&#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;fa&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    run()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;man&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>这里便是多态的实现，我创建了一个接口，所以便用了implement的方法来实现函数的创建</p>]]></content>
    
    
    <summary type="html">flutter里抽象类的解释</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>随心一听</title>
    <link href="https://madao-luv.github.io/posts/5e52f62.html"/>
    <id>https://madao-luv.github.io/posts/5e52f62.html</id>
    <published>2024-03-21T16:14:58.000Z</published>
    <updated>2024-04-28T14:54:30.914Z</updated>
    
    <content type="html"><![CDATA[<p><strong>just  listen  </strong>龙与虎</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;just  listen  
&lt;/strong&gt;龙与虎&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="life" scheme="https://madao-luv.github.io/tags/life/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://madao-luv.github.io/posts/0.html"/>
    <id>https://madao-luv.github.io/posts/0.html</id>
    <published>2024-03-19T16:35:56.179Z</published>
    <updated>2024-03-19T16:43:24.996Z</updated>
    
    <content type="html"><![CDATA[{"name":"MADAO`Blog","short_name":"夜见山","theme_color":"#3b70fc","background_color":"#3b70fc","display":"standalone","scope":"/","start_url":"/","icons":[{"src":"/img/siteicon/16.png","sizes":"16x16","type":"image/png"},{"src":"/img/siteicon/32.png","sizes":"32x32","type":"image/png"},{"src":"/img/siteicon/48.png","sizes":"48x48","type":"image/png"},{"src":"/img/siteicon/64.png","sizes":"64x64","type":"image/png"},{"src":"/img/siteicon/128.png","sizes":"128x128","type":"image/png"},{"src":"/img/siteicon/144.png","sizes":"144x144","type":"image/png"},{"src":"/img/siteicon/512.png","sizes":"512x512","type":"image/png"}],"splash_pages":null}]]></content>
    
    
      
      
    <summary type="html">{&quot;name&quot;:&quot;MADAO`Blog&quot;,&quot;short_name&quot;:&quot;夜见山&quot;,&quot;theme_color&quot;:&quot;#3b70fc&quot;,&quot;background_color&quot;:&quot;#3b70fc&quot;,&quot;display&quot;:&quot;standalone&quot;,&quot;scope&quot;:&quot;/&quot;,&quot;start_url&quot;:</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://madao-luv.github.io/posts/4a17b156.html"/>
    <id>https://madao-luv.github.io/posts/4a17b156.html</id>
    <published>2024-03-18T16:23:00.968Z</published>
    <updated>2024-03-19T09:47:12.903Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MADAO</title>
  <icon>https://www.gravatar.com/avatar/ae2a6c03a9e90f5d585dcd23ed6f88c8</icon>
  <subtitle>BOSS SAMA拜托了!</subtitle>
  <link href="https://madao-luv.github.io/atom.xml" rel="self"/>
  
  <link href="https://madao-luv.github.io/"/>
  <updated>2024-06-24T16:24:38.094Z</updated>
  <id>https://madao-luv.github.io/</id>
  
  <author>
    <name>MADAO</name>
    <email>3335075714@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>STM32一些模块的源码</title>
    <link href="https://madao-luv.github.io/posts/d409b276.html"/>
    <id>https://madao-luv.github.io/posts/d409b276.html</id>
    <published>2024-06-24T16:00:00.000Z</published>
    <updated>2024-06-24T16:24:38.094Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Descirbation"><a href="#Descirbation" class="headerlink" title="Descirbation:"></a>Descirbation:</h1><p>这里面用来存放STM32的一些模块的源码</p><h1 id="嘀嗒定时器延时-SysDelay-h"><a href="#嘀嗒定时器延时-SysDelay-h" class="headerlink" title="嘀嗒定时器延时 SysDelay.h"></a><strong>嘀嗒定时器延时 SysDelay.h</strong></h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __SysDelay_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __SysDelay_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Sysdelay_init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Sysdelay_us</span><span class="params">(u32 nus)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Sysdelay_ms</span><span class="params">(u32 nms)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h1 id="嘀嗒定时器延时-SysDelay-c"><a href="#嘀嗒定时器延时-SysDelay-c" class="headerlink" title="嘀嗒定时器延时 SysDelay.c"></a><strong>嘀嗒定时器延时 SysDelay.c</strong></h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*static修饰全局变量，该变量只在本文件被访问，不能被外部文件访问</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">static</span> u32 fac_us;  <span class="comment">//定义 1 微秒的值</span></span><br><span class="line"><span class="type">static</span> u32 fac_ms;  <span class="comment">//定义 1  毫秒的值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*************************************</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* 初始化系统的嘀嗒定时器</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*解释:</span></span><br><span class="line"><span class="comment">对于时延的初始化，直接让 Systick 使用系统时钟的 8 分频，</span></span><br><span class="line"><span class="comment">使其达到 9MHz 的频率，产生 1ms时间基准 </span></span><br><span class="line"><span class="comment">此处的校准值为9000 则 9000 * 1 / (9 * 10**6) = 1 * 10**-3 s == 1 ms</span></span><br><span class="line"><span class="comment">**************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Sysdelay_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">SysTick_CLKSourceConfig(SysTick_CLKSource_HCLK_Div8); </span><br><span class="line"><span class="comment">//选择外部时钟，将 72MHz 的频率 8 分频，把系统嘀嗒定时器的变化定位在 1s</span></span><br><span class="line"></span><br><span class="line">fac_us = SystemCoreClock / <span class="number">8000000</span>;  <span class="comment">//此处的SystemCoreClock---72MHZ</span></span><br><span class="line">fac_ms = fac_us * <span class="number">1000</span>;   <span class="comment">//1 毫秒的时间</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**************************************</span></span><br><span class="line"><span class="comment">* 微秒延时计数</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*@para-&gt; u32 nus    你所需延时的微妙时间</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment"> 无返回值</span></span><br><span class="line"><span class="comment">* temp &amp; 0x01 &amp;&amp; !(temp &amp; (1 &lt;&lt; 16)) 详解：</span></span><br><span class="line"><span class="comment">* temp &amp; 0x01 通过定时器状态值的最小位（1位）判断定时器是否处于使能状态</span></span><br><span class="line"><span class="comment">* !(temp &amp; (1 &lt;&lt; 16)) 通过定时器状态值的最大位（16位）判断定时器是否处于归零状态</span></span><br><span class="line"><span class="comment">***************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Sysdelay_us</span><span class="params">(u32 nus)</span></span><br><span class="line">&#123;</span><br><span class="line">u32 temp;</span><br><span class="line">SysTick-&gt;LOAD = nus * fac_us;   <span class="comment">//设置重载值  当到达溢出后，计数器回到此值</span></span><br><span class="line">SysTick-&gt;VAL |= <span class="number">0x00</span>;    <span class="comment">//将定时器归零</span></span><br><span class="line">SysTick-&gt;CTRL |= SysTick_CTRL_ENABLE_Msk;   <span class="comment">//开启定时器</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//这里是 do&#123;&#125;while(); 先执行&#123;&#125;里的代码 后进行判断</span></span><br><span class="line"><span class="comment">// 通过循环判定定时器的状态位值来确定定时器是否归零</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">temp = SysTick-&gt;CTRL; <span class="comment">//获取定时器状态值</span></span><br><span class="line">&#125;<span class="keyword">while</span>(temp &amp; <span class="number">0x01</span> &amp;&amp; !(temp &amp; (<span class="number">1</span> &lt;&lt; <span class="number">16</span>)));</span><br><span class="line">SysTick-&gt;CTRL &amp;= ~SysTick_CTRL_ENABLE_Msk; <span class="comment">//关闭定时器</span></span><br><span class="line">SysTick-&gt;VAL |= <span class="number">0x00</span>;  <span class="comment">//定时器归零</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**************************************</span></span><br><span class="line"><span class="comment">* 毫秒延时计数</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*@para-&gt; u32 nms    你所需延时的毫秒时间</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment"> 无返回值</span></span><br><span class="line"><span class="comment">* temp &amp; 0x01 &amp;&amp; !(temp &amp; (1 &lt;&lt; 16)) 详解：</span></span><br><span class="line"><span class="comment">* temp &amp; 0x01 通过定时器状态值的最小位（1位）判断定时器是否处于使能状态</span></span><br><span class="line"><span class="comment">* !(temp &amp; (1 &lt;&lt; 16)) 通过定时器状态值的最大位（16位）判断定时器是否处于归零状态</span></span><br><span class="line"><span class="comment">***************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Sysdelay_ms</span><span class="params">(u32 nms)</span></span><br><span class="line">&#123;</span><br><span class="line">u32 temp;</span><br><span class="line">SysTick-&gt;LOAD = nms * fac_ms;   <span class="comment">//设置重载值  当到达溢出后，计数器回到此值</span></span><br><span class="line">SysTick-&gt;VAL |= <span class="number">0x00</span>;    <span class="comment">//将定时器归零</span></span><br><span class="line">SysTick-&gt;CTRL |= SysTick_CTRL_ENABLE_Msk;   <span class="comment">//开启定时器</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//这里是 do&#123;&#125;while(); 先执行&#123;&#125;里的代码 后进行判断</span></span><br><span class="line"><span class="comment">// 通过循环判定定时器的状态位值来确定定时器是否归零</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">temp = SysTick-&gt;CTRL; <span class="comment">//获取定时器状态值</span></span><br><span class="line">&#125;<span class="keyword">while</span>(temp &amp; <span class="number">0x01</span> &amp;&amp; !(temp &amp; (<span class="number">1</span> &lt;&lt; <span class="number">16</span>)));</span><br><span class="line">SysTick-&gt;CTRL &amp;= ~SysTick_CTRL_ENABLE_Msk; <span class="comment">//关闭定时器</span></span><br><span class="line">SysTick-&gt;VAL |= <span class="number">0x00</span>;  <span class="comment">//定时器归零</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Descirbation&quot;&gt;&lt;a href=&quot;#Descirbation&quot; class=&quot;headerlink&quot; title=&quot;Descirbation:&quot;&gt;&lt;/a&gt;Descirbation:&lt;/h1&gt;&lt;p&gt;这里面用来存放STM32的一些模块的源码&lt;/p&gt;
&lt;h1</summary>
      
    
    
    
    
    <category term="Technology" scheme="https://madao-luv.github.io/tags/Technology/"/>
    
  </entry>
  
  <entry>
    <title>期末报告系列</title>
    <link href="https://madao-luv.github.io/posts/5faf78be.html"/>
    <id>https://madao-luv.github.io/posts/5faf78be.html</id>
    <published>2024-06-20T16:00:00.000Z</published>
    <updated>2024-06-21T02:10:11.343Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2024-6-21-留言"><a href="#2024-6-21-留言" class="headerlink" title="2024-6-21 留言"></a>2024-6-21 留言</h1><p>持续更新ing<br>对于计算机学科或者是其他需要学习一些计算机语言的同学，已经苦期末的程序设计久矣，故我将我写过的程序作业放在Bolg里面，提供给大家借鉴。(所有的程序都是可以运行的)，<strong>对于那些需要分模块的部分，我会提示的，没有提示的部分，便是直接放入即可</strong>。 最后，感谢各位的观看。</p><h1 id="C-写学生管理系统"><a href="#C-写学生管理系统" class="headerlink" title="C++写学生管理系统"></a>C++写学生管理系统</h1><h2 id="作业所需要求"><a href="#作业所需要求" class="headerlink" title="作业所需要求"></a>作业所需要求</h2><p>一、设计基础<br>设计一个基于 C++的学生信息管理系统，该系统应能够有效地管理学生信息，<br>包括学生基本信息、课程成绩、奖惩记录等，并提供相关的查询、修改和统计<br>功能。该系统旨在提高学校的管理效率，并为教师和学生提供更好的服务。<br>二、功能要求</p><ol><li>学生信息录入<br>o 管理员可以录入学生的基本信息，包括学号、姓名、性别、出生<br>日期、班级等。<br>o 系统应自动为每个学生分配一个唯一的学号。</li><li>课程成绩管理<br>o 管理员可以录入学生的课程成绩，包括课程名称、课程代码、成<br>绩等。<br>o 支持学生成绩的修改和查询。</li><li>奖惩记录管理<br>o 管理员可以记录学生的奖惩信息，包括奖惩类型、奖惩内容、时<br>间等。<br>o 支持奖惩记录的查询和修改。</li><li>学生信息查询<br>o 用户可以通过学号、姓名等关键词查询学生的基本信息、课程成<br>绩和奖惩记录。<br>o 查询结果应清晰明了，便于用户快速了解学生情况。</li><li>统计分析<br>o 提供统计分析功能，如按班级统计学生数量、平均成绩等。<br>o 提供学生成绩排名、奖惩情况统计等报表，帮助管理员分析学生<br>学习和表现情况。</li><li>扩展功能（可选）<br>o 学生登录功能：允许学生使用学号和密码登录系统，查看自己的<br>信息和成绩。<br>o 教师登录功能：允许教师查看所教课程的学生成绩和统计信息。<br>o 导出功能：支持将学生信息、成绩和奖惩记录导出为 Excel 或 CSV<br>文件。<br>三、实现要求<br> 使用 C++编程语言实现系统功能。<br> 可以利用结构体或类来定义学生、课程成绩、奖惩记录等相关的数据结<br>构。<br> 学生信息、成绩和奖惩记录应保存到文件中，确保数据的持久化。<br> 提供友好的用户界面，可以是命令行界面或简单的图形界面。<br> 注意系统的稳定性和安全性，确保数据不会因意外情况而丢失或被篡<br>改。</li></ol><h2 id="C-代码-全部"><a href="#C-代码-全部" class="headerlink" title="C++代码(全部)"></a>C++代码(<strong>全部</strong>)</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"> </span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Numbers 100</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//学生类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> &#123;</span></span><br><span class="line">public:</span><br><span class="line">    <span class="type">int</span> student_id;</span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="built_in">string</span> gender;</span><br><span class="line">    <span class="built_in">string</span> birth_date;</span><br><span class="line">    <span class="built_in">string</span> class_name;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    Student(<span class="type">int</span> id, <span class="built_in">string</span> n, <span class="built_in">string</span> g, <span class="built_in">string</span> bd, <span class="built_in">string</span> cn)</span><br><span class="line">        : student_id(id), name(n), gender(g), birth_date(bd), class_name(cn) &#123;&#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 注册学生信息</span></span><br><span class="line">    <span class="type">void</span> <span class="title function_">registerStudent</span><span class="params">()</span> &#123;</span><br><span class="line">        srand(time(<span class="number">0</span>));</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入学生的姓名: &quot;</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入学生的班级: &quot;</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; student_id;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入学生的生日&quot;</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; birth_date;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入学生的班级&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; class_name;</span><br><span class="line">        student_id = rand();   <span class="comment">// 随机生成一个学号</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;为该学生生成了一个专属的学号,学号是:&quot;</span> &lt;&lt; student_id &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        ofstream <span class="title function_">outfile</span><span class="params">(<span class="string">&quot;students.txt&quot;</span>, ios::app)</span>;</span><br><span class="line">        <span class="keyword">if</span> (outfile.is_open()) &#123;</span><br><span class="line">            outfile &lt;&lt; name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; student_id &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; birth_date &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; class_name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            outfile.close();</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;恭喜，学生信息注册成功!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;无法写入学生信息.&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 学生登录功能</span></span><br><span class="line">    <span class="type">bool</span> <span class="title function_">loginStudent</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">string</span> name;</span><br><span class="line">        <span class="type">int</span> studnet_id;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入学生的姓名 &quot;</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入学生的学号: &quot;</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; student_id;</span><br><span class="line"> </span><br><span class="line">        ifstream <span class="title function_">infile</span><span class="params">(<span class="string">&quot;students.txt&quot;</span>)</span>;</span><br><span class="line">        <span class="built_in">string</span> file_name, file_studentname;</span><br><span class="line">        <span class="type">int</span> file_id;</span><br><span class="line">        <span class="type">bool</span> login_success = <span class="literal">false</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> (infile.is_open()) &#123;</span><br><span class="line">            <span class="keyword">while</span> (infile &gt;&gt; file_name &gt;&gt; file_id &gt;&gt; file_studentname) &#123;</span><br><span class="line">                <span class="keyword">if</span> (file_id == student_id &amp;&amp; file_studentname == name) &#123;</span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Login successful! Welcome &quot;</span> &lt;&lt; file_name &lt;&lt; <span class="string">&quot;!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">                    login_success = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            infile.close();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Unable to open file for reading.&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> (!login_success) &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Invalid ID or password. Login failed.&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> login_success;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//课程成绩类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseGrade</span> &#123;</span></span><br><span class="line">public:</span><br><span class="line">    <span class="type">int</span> student_id;</span><br><span class="line">    <span class="built_in">string</span> course_name;</span><br><span class="line">    <span class="built_in">string</span> course_code;</span><br><span class="line">    <span class="type">double</span> grade;</span><br><span class="line"> </span><br><span class="line">    CourseGrade(<span class="type">int</span> id, <span class="built_in">string</span> cn, <span class="built_in">string</span> cc, <span class="type">double</span> g)</span><br><span class="line">        : student_id(id), course_name(cn), course_code(cc), grade(g) &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//奖赏机制类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AwardPenalty</span> &#123;</span></span><br><span class="line">public:</span><br><span class="line">    <span class="type">int</span> student_id;</span><br><span class="line">    <span class="built_in">string</span> type;</span><br><span class="line">    <span class="built_in">string</span> content;</span><br><span class="line">    <span class="built_in">string</span> date;</span><br><span class="line"> </span><br><span class="line">    AwardPenalty(<span class="type">int</span> id, <span class="built_in">string</span> t, <span class="built_in">string</span> c, <span class="built_in">string</span> d)</span><br><span class="line">        : student_id(id), type(t), content(c), date(d) &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="built_in">vector</span>&lt;Student&gt; students;</span><br><span class="line"><span class="built_in">vector</span>&lt;CourseGrade&gt; grades;</span><br><span class="line"><span class="built_in">vector</span>&lt;AwardPenalty&gt; awards;</span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> next_student_id = <span class="number">1</span>;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">addStudent</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">string</span> name, gender, birth_date, class_name;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请加入学生的姓名: &quot;</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入学生的成绩: &quot;</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; gender;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入学生的生日 (YYYY-MM-DD): &quot;</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; birth_date;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入学生所属于的班级 (类似2023级电商二班): &quot;</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; class_name;</span><br><span class="line">    Student <span class="title function_">new_student</span><span class="params">(next_student_id++, name, gender, birth_date, class_name)</span>;</span><br><span class="line">    students.push_back(new_student);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;学生自己的学号: &quot;</span> &lt;&lt; new_student.student_id &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">manageCourseGrades</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    <span class="built_in">string</span> course_name, course_code;</span><br><span class="line">    <span class="type">double</span> grade;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入学生的学号: &quot;</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; id;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入课程名: &quot;</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; course_name;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入课程代号: &quot;</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; course_code;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入学生该门课程的成绩: &quot;</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; grade;</span><br><span class="line">    grades.push_back(CourseGrade(id, course_name, course_code, grade));</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;课程添加成功！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//奖罚方法</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">manageAwardPenalties</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    <span class="built_in">string</span> type, content, date;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入奖罚同学的学号: &quot;</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; id;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入类型 (award/penalty): &quot;</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; type;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入具体奖罚内容: &quot;</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; content;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;发生日期 (YYYY-MM-DD): &quot;</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; date;</span><br><span class="line">    awards.push_back(AwardPenalty(id, type, content, date));</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;奖励/处罚已被成功添加.&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//查找学生</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">queryStudentInfo</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入学生的学号: &quot;</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; id;</span><br><span class="line">    <span class="keyword">auto</span> it = find_if(students.begin(), students.end(), [id](Student&amp; s) &#123; <span class="keyword">return</span> s.student_id == id; &#125;);</span><br><span class="line">    <span class="keyword">if</span> (it != students.end()) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;学生的学号: &quot;</span> &lt;&lt; it-&gt;student_id &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;名字: &quot;</span> &lt;&lt; it-&gt;name &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;成绩: &quot;</span> &lt;&lt; it-&gt;gender &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;生日: &quot;</span> &lt;&lt; it-&gt;birth_date &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;班级: &quot;</span> &lt;&lt; it-&gt;class_name &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;对不起，无法找到该学生.&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//统计成绩</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">statisticalAnalysis</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="type">int</span>, <span class="type">double</span>&gt; student_average_grades;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span>&amp; grade : grades) &#123;</span><br><span class="line">        student_average_grades[grade.student_id] += grade.grade;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span>&amp; <span class="built_in">pair</span> : student_average_grades) &#123;</span><br><span class="line">        <span class="built_in">pair</span>.second /= count_if(grades.begin(), grades.end(), [<span class="built_in">pair</span>](CourseGrade&amp; g) &#123; <span class="keyword">return</span> g.student_id == <span class="built_in">pair</span>.first; &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span>&amp; <span class="built_in">pair</span> : student_average_grades) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;学生学号: &quot;</span> &lt;&lt; <span class="built_in">pair</span>.first &lt;&lt; <span class="string">&quot;, 平均成绩是: &quot;</span> &lt;&lt; <span class="built_in">pair</span>.second &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">studentLogin</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> id,choice;</span><br><span class="line">    <span class="built_in">string</span> Name;</span><br><span class="line">    <span class="comment">// Simplified login function</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;学生登录功能.&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入您的姓名&quot;</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; Name;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入您的学号&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; id;</span><br><span class="line">    <span class="keyword">auto</span> it = find_if(students.begin(), students.end(), [id](Student&amp; s) &#123; <span class="keyword">return</span> s.student_id == id; &#125;);</span><br><span class="line">    <span class="keyword">if</span> (it != students.end()) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请问&quot;</span> &lt;&lt; Name&lt;&lt;<span class="string">&quot;是否想查询自己的成绩和信息？(请输入-- - (1 / 0))&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; choice;</span><br><span class="line">        <span class="keyword">switch</span> (choice)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;感谢您的使用&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; Name &lt;&lt;<span class="string">&quot;同学,你的成绩是:&quot;</span> &lt;&lt; it-&gt;gender &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;以下是您的个人信息&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;生日: &quot;</span> &lt;&lt; it-&gt;birth_date &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;班级: &quot;</span> &lt;&lt; it-&gt;class_name &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;您的选项有误。&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;对不起，无法找到该学生.&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">mainMenu</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;1. 加入学生信息\n2. 管理课程信息\n3. 奖罚管理\n4. 查询学生信息\n5. 统计与分析\n6. 学生登录\n7. 退出\n&quot;</span>;</span><br><span class="line">        <span class="type">int</span> choice;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; choice;</span><br><span class="line">        <span class="keyword">switch</span> (choice) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            addStudent();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            manageCourseGrades();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            manageAwardPenalties();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            queryStudentInfo();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            statisticalAnalysis();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            studentLogin();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;您的输入有误，请重新输入谢谢。&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    mainMenu();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="python实现图书管理系统"><a href="#python实现图书管理系统" class="headerlink" title="python实现图书管理系统"></a>python实现图书管理系统</h1><h2 id="具体要求"><a href="#具体要求" class="headerlink" title="具体要求"></a>具体要求</h2><p>一、系统概述 使用 Python 实现的图书馆借阅系统，此系统支持图书信息的录入、借阅、归 还、查询以及借阅记录的查询等功能。</p><p>二、功能要求</p><p>1.图书信息录入： o 管理员可以录入图书的基本信息，包括书名、作者、ISBN 号、出 版社和入库时间等。 o 系统自动为每本图书分配一个唯一的标识符（图书 ID）。</p><p>2.图书借阅： o 读者可以借阅图书，借阅时需提供有效的身份证明（如读者证 号）。 o 系统记录借阅时间、借阅者信息和所借图书的详细信息。 o 若图书已被借出，系统提示读者该图书当前不可用。</p><p>3.图书归还： o 读者在借阅期满后归还图书。 o 系统更新图书的归还状态，并记录归还时间。 o 若图书逾期未还，系统能自动计算并显示逾期费用（如有此规 定）。</p><p>4.图书查询： o 用户可以通过书名、作者、ISBN 号等关键词查询图书的借阅状态 和位置（如在馆、已借出等）。 o 查询结果应清晰明了，便于用户快速了解图书的当前状态。</p><p>5.借阅记录查询： o 管理员可以查询某本图书的借阅历史记录，包括借阅者信息、借 阅时间和归还时间等。</p><p>三、实现方式</p><p>1.数据结构： o 使用 Python 的字典（dict）或自定义类（class）来定义图书和借 阅记录等数据结构。 o 字典或类中的属性可以包括图书 ID、书名、作者、ISBN 号、出版 社、入库时间、借阅状态、借阅者信息等。</p><p>2.数据存储： o 图书信息可以保存在内存中，通过 Python 的变量或数据结构进行 管理。 o 借阅和归还记录可以保存到文本文件或数据库中，以便后续查询 和分析。</p><p>3.用户界面： o 提供命令行界面（CLI），通过终端与用户进行交互。 o 设计友好的交互提示和错误处理机制，确保用户能够方便地进行 操作。</p><p>4.稳定性和安全性： o 注意异常处理，确保系统在遇到错误时能够妥善处理并给出提 示。 o 考虑数据备份和恢复机制，防止数据丢失或被篡改。</p><h2 id="2-pyhton具体实现（代码全部在一个文件里）"><a href="#2-pyhton具体实现（代码全部在一个文件里）" class="headerlink" title="2.pyhton具体实现（代码全部在一个文件里）"></a>2.pyhton具体实现（<strong>代码全部在一个文件里</strong>）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">List</span>, <span class="type">Dict</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 图书类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Book</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, title: <span class="built_in">str</span>, author: <span class="built_in">str</span>, isbn: <span class="built_in">str</span>, publisher: <span class="built_in">str</span>, entry_date: <span class="built_in">str</span></span>):</span><br><span class="line">        self.<span class="built_in">id</span> = <span class="literal">None</span>  <span class="comment"># 书的唯一ID</span></span><br><span class="line">        self.title = title</span><br><span class="line">        self.author = author</span><br><span class="line">        self.isbn = isbn</span><br><span class="line">        self.publisher = publisher</span><br><span class="line">        self.entry_date = entry_date</span><br><span class="line">        self.is_borrowed = <span class="literal">False</span></span><br><span class="line">        self.borrower_id = <span class="literal">None</span></span><br><span class="line">        self.borrow_date = <span class="literal">None</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 借阅记录类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BorrowRecord</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, book_id: <span class="built_in">int</span>, borrower_id: <span class="built_in">str</span>, borrow_date: <span class="built_in">str</span></span>):</span><br><span class="line">        self.book_id = book_id</span><br><span class="line">        self.borrower_id = borrower_id</span><br><span class="line">        self.borrow_date = borrow_date</span><br><span class="line">        self.return_date = <span class="literal">None</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 图书馆系统类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LibrarySystem</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.books: <span class="type">Dict</span>[<span class="built_in">int</span>, Book] = &#123;&#125;</span><br><span class="line">        self.borrow_records: <span class="type">List</span>[BorrowRecord] = []</span><br><span class="line">        self.next_book_id = <span class="number">1</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_book</span>(<span class="params">self, title: <span class="built_in">str</span>, author: <span class="built_in">str</span>, isbn: <span class="built_in">str</span>, publisher: <span class="built_in">str</span>, entry_date: <span class="built_in">str</span></span>):</span><br><span class="line">        book = Book(title, author, isbn, publisher, entry_date)</span><br><span class="line">        book.<span class="built_in">id</span> = self.next_book_id</span><br><span class="line">        self.books[self.next_book_id] = book</span><br><span class="line">        self.next_book_id += <span class="number">1</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;该书被添加以及其ID: <span class="subst">&#123;book.<span class="built_in">id</span>&#125;</span>&quot;</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">borrow_book</span>(<span class="params">self, book_id: <span class="built_in">int</span>, borrower_id: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="keyword">if</span> book_id <span class="keyword">not</span> <span class="keyword">in</span> self.books:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;该书ID并未存在.&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        book = self.books[book_id]</span><br><span class="line">        <span class="keyword">if</span> book.is_borrowed:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;很抱歉，此书已经被借阅.&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        book.is_borrowed = <span class="literal">True</span></span><br><span class="line">        book.borrower_id = borrower_id</span><br><span class="line">        book.borrow_date = datetime.date.today().isoformat()</span><br><span class="line">        borrow_record = BorrowRecord(book_id, borrower_id, book.borrow_date)</span><br><span class="line">        self.borrow_records.append(borrow_record)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;该书被借阅: <span class="subst">&#123;book.title&#125;</span>&quot;</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">return_book</span>(<span class="params">self, book_id: <span class="built_in">int</span></span>):</span><br><span class="line">        <span class="keyword">if</span> book_id <span class="keyword">not</span> <span class="keyword">in</span> self.books:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;该书ID并未存在.&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        book = self.books[book_id]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> book.is_borrowed:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;该书未被借阅.&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        book.is_borrowed = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">for</span> record <span class="keyword">in</span> self.borrow_records:</span><br><span class="line">            <span class="keyword">if</span> record.book_id == book_id <span class="keyword">and</span> record.return_date <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                record.return_date = datetime.date.today().isoformat()</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;图书已被归还: <span class="subst">&#123;book.title&#125;</span>&quot;</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">search_books</span>(<span class="params">self, query: <span class="built_in">str</span></span>):</span><br><span class="line">        results = [book <span class="keyword">for</span> book <span class="keyword">in</span> self.books.values() <span class="keyword">if</span> query.lower() <span class="keyword">in</span> book.title.lower() <span class="keyword">or</span> query.lower() <span class="keyword">in</span> book.author.lower() <span class="keyword">or</span> query.lower() <span class="keyword">in</span> book.isbn]</span><br><span class="line">        <span class="keyword">if</span> results:</span><br><span class="line">            <span class="keyword">for</span> book <span class="keyword">in</span> results:</span><br><span class="line">                status = <span class="string">&quot;已被借阅&quot;</span> <span class="keyword">if</span> book.is_borrowed <span class="keyword">else</span> <span class="string">&quot;可以借阅&quot;</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;本书ID: <span class="subst">&#123;book.<span class="built_in">id</span>&#125;</span>, 书名: <span class="subst">&#123;book.title&#125;</span>, 作者: <span class="subst">&#123;book.author&#125;</span>, 借阅状态: <span class="subst">&#123;status&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;没有找到此书.&quot;</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">query_borrow_records</span>(<span class="params">self, book_id: <span class="built_in">int</span></span>):</span><br><span class="line">        <span class="keyword">if</span> book_id <span class="keyword">not</span> <span class="keyword">in</span> self.books:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;抱歉，该书ID未存在.&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        records = [record <span class="keyword">for</span> record <span class="keyword">in</span> self.borrow_records <span class="keyword">if</span> record.book_id == book_id]</span><br><span class="line">        <span class="keyword">if</span> records:</span><br><span class="line">            <span class="keyword">for</span> record <span class="keyword">in</span> records:</span><br><span class="line">                return_date = record.return_date <span class="keyword">if</span> record.return_date <span class="keyword">else</span> <span class="string">&quot;抱歉，该书仍然未归还&quot;</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;借阅者 ID: <span class="subst">&#123;record.borrower_id&#125;</span>, 借阅时间: <span class="subst">&#123;record.borrow_date&#125;</span>, 归还日期: <span class="subst">&#123;return_date&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;没有找到该书的借阅记录.&quot;</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">save_data</span>(<span class="params">self, filename: <span class="built_in">str</span></span>):</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&quot;books&quot;</span>: &#123;book_id: book.__dict__ <span class="keyword">for</span> book_id, book <span class="keyword">in</span> self.books.items()&#125;,</span><br><span class="line">            <span class="string">&quot;borrow_records&quot;</span>: [record.__dict__ <span class="keyword">for</span> record <span class="keyword">in</span> self.borrow_records]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            json.dump(data, f, indent=<span class="number">4</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">load_data</span>(<span class="params">self, filename: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                data = json.load(f)</span><br><span class="line">                self.books = &#123;<span class="built_in">int</span>(book_id): Book(**book_data) <span class="keyword">for</span> book_id, book_data <span class="keyword">in</span> data[<span class="string">&quot;books&quot;</span>].items()&#125;</span><br><span class="line">                self.borrow_records = [BorrowRecord(**record_data) <span class="keyword">for</span> record_data <span class="keyword">in</span> data[<span class="string">&quot;borrow_records&quot;</span>]]</span><br><span class="line">                self.next_book_id = <span class="built_in">max</span>(self.books.keys(), default=<span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">        <span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;未找到图书馆该类似文件，依旧空缺&quot;</span>)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Visitor</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, visitor_type</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.visitor_type = visitor_type</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;名字: <span class="subst">&#123;self.name&#125;</span>, 类型: <span class="subst">&#123;self.visitor_type&#125;</span>&quot;</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 继承借阅者类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Borrower</span>(<span class="title class_ inherited__">Visitor</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, borrowed_books=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(name, <span class="string">&quot;借阅者&quot;</span>)</span><br><span class="line">        self.borrowed_books = borrowed_books <span class="keyword">if</span> borrowed_books <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">else</span> []</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">borrow_book</span>(<span class="params">self, book</span>):</span><br><span class="line">        self.borrowed_books.append(book)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>().__str__() + <span class="string">f&quot;, 借阅书籍: <span class="subst">&#123;<span class="string">&#x27;, &#x27;</span>.join(self.borrowed_books)&#125;</span>&quot;</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 管理者类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Manager</span>(<span class="title class_ inherited__">Visitor</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, responsibilities=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(name, <span class="string">&quot;管理员&quot;</span>)</span><br><span class="line">        self.responsibilities = responsibilities <span class="keyword">if</span> responsibilities <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">else</span> []</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_responsibility</span>(<span class="params">self, responsibility</span>):</span><br><span class="line">        self.responsibilities.append(responsibility)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>().__str__() + <span class="string">f&quot;, 职责: <span class="subst">&#123;<span class="string">&#x27;, &#x27;</span>.join(self.responsibilities)&#125;</span>&quot;</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PeopleSystem</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.visitors = []</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_visitor</span>(<span class="params">self, visitor</span>):</span><br><span class="line">        self.visitors.append(visitor)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">show_visitors</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">for</span> visitor <span class="keyword">in</span> self.visitors:</span><br><span class="line">            <span class="built_in">print</span>(visitor)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Login</span>():</span><br><span class="line">    People = PeopleSystem()</span><br><span class="line">    ma = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请问您是否为借阅者(1 是 / 0 否 ):&quot;</span>))</span><br><span class="line">    <span class="keyword">if</span> ma == <span class="number">1</span>:</span><br><span class="line">        borrower = Borrower(name=<span class="built_in">input</span>(<span class="string">&quot;请输入您的名字:&quot;</span>))</span><br><span class="line">        People.add_visitor(borrower)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        manager = Manager(name=<span class="built_in">input</span>(<span class="string">&quot;请输入您的名字:&quot;</span>))</span><br><span class="line">        manager.add_responsibility(<span class="built_in">input</span>(<span class="string">&quot;输入您的工作职责:&quot;</span>))</span><br><span class="line">        People.add_visitor(manager)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;欢迎您的登录&quot;</span>)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Books</span>():</span><br><span class="line">    ma = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请问您是否为借阅者(1 是 / 0 否 ):&quot;</span>))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">------------------图书借阅系统v1.0-----------------------</span></span><br><span class="line"><span class="string">   *1. 图书信息录入(管理员进行操作)     </span></span><br><span class="line"><span class="string">   *2. 图书借阅</span></span><br><span class="line"><span class="string">   *3. 图书归还</span></span><br><span class="line"><span class="string">   *4. 图书查询</span></span><br><span class="line"><span class="string">   *5. 借阅记录查询</span></span><br><span class="line"><span class="string">   *6. 登录</span></span><br><span class="line"><span class="string">   *7. 退出系统</span></span><br><span class="line"><span class="string">--------------------------------------------------------</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span>)</span><br><span class="line">    choice = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入您的选择:&quot;</span>))</span><br><span class="line">    lib = LibrarySystem()</span><br><span class="line">    <span class="keyword">if</span> choice == <span class="number">7</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;感谢您的使用&quot;</span>)</span><br><span class="line">        exit()</span><br><span class="line">    <span class="keyword">if</span> ma == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> choice == <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">--------------正在加入图书----------------------           </span></span><br><span class="line"><span class="string">            &quot;&quot;&quot;</span>)</span><br><span class="line">            title = <span class="built_in">input</span>(<span class="string">&quot;请输入书名:&quot;</span>)</span><br><span class="line">            author = <span class="built_in">input</span>(<span class="string">&quot;请输入作者名字:&quot;</span>)</span><br><span class="line">            isbn = <span class="built_in">input</span>(<span class="string">&quot;请输入图书的ISBN号&quot;</span>)</span><br><span class="line">            publisher = <span class="built_in">input</span>(<span class="string">&quot;请输入出版社:&quot;</span>)</span><br><span class="line">            entry_date = <span class="built_in">input</span>(<span class="string">&quot;进入日期(例如:2024-4-26):&quot;</span>)</span><br><span class="line">            lib.add_book(title,author,isbn,publisher,entry_date)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;图书加入成功&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;操作失误哦&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> choice == <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;您的操作越界哦&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> choice == <span class="number">2</span>:</span><br><span class="line">            book_id = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入图书的ID号:&quot;</span>))</span><br><span class="line">            borrower_id = <span class="built_in">input</span>(<span class="string">&quot;请输入ID:&quot;</span>)</span><br><span class="line">            lib.borrow_book(book_id,borrower_id)</span><br><span class="line">        <span class="keyword">elif</span> choice == <span class="number">3</span>:</span><br><span class="line">            book_id = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入图书的ID号&quot;</span>))</span><br><span class="line">            lib.return_book(book_id)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;感谢您的及时归还，祝您生活愉快&quot;</span>)</span><br><span class="line">        <span class="keyword">elif</span> choice == <span class="number">4</span>:</span><br><span class="line">            query = <span class="built_in">input</span>(<span class="string">&quot;请输入您要查找的书籍名称&quot;</span>)</span><br><span class="line">            lib.search_books(query)</span><br><span class="line">        <span class="keyword">elif</span> choice == <span class="number">5</span>:</span><br><span class="line">            filename = <span class="built_in">input</span>(<span class="string">&quot;请输入您要查询的书的借阅记录&quot;</span>)</span><br><span class="line">            lib.save_data(filename)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    Login()</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>):</span><br><span class="line">        library = LibrarySystem()</span><br><span class="line">        library.load_data(<span class="string">&#x27;library_data.json&#x27;</span>)</span><br><span class="line">        Books()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;2024-6-21-留言&quot;&gt;&lt;a href=&quot;#2024-6-21-留言&quot; class=&quot;headerlink&quot; title=&quot;2024-6-21 留言&quot;&gt;&lt;/a&gt;2024-6-21 留言&lt;/h1&gt;&lt;p&gt;持续更新ing&lt;br&gt;对于计算机学科或者是其他需要学习一些计</summary>
      
    
    
    
    
    <category term="HomeWork" scheme="https://madao-luv.github.io/tags/HomeWork/"/>
    
  </entry>
  
  <entry>
    <title>PID算法</title>
    <link href="https://madao-luv.github.io/posts/14ee3806.html"/>
    <id>https://madao-luv.github.io/posts/14ee3806.html</id>
    <published>2024-06-04T01:10:35.022Z</published>
    <updated>2024-06-19T14:56:53.870Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><strong>2024-6-18-更新</strong> 我们要实现PID算法，需要<strong>反馈值</strong>。那么，这个值，我们该怎么获取呢？  这里我拿平衡小车举个例子。我们的平衡小车；既然想要做到平衡且不倒的话，就需要把它的三轴角速度和三轴加速度的值放到PID算法中，然后得出值再运用到PWM，最后通过PWM来控制电机调动。(MPU6050可以胜任)<br>所以我们的思路如下:  </p><ol><li>I2C来获取MPU6050的六轴数据Data</li><li>把获取的Data 传输到 PID算法中获取反馈值 Tes</li><li>再把Tes用与PWM中</li><li>PWM调控电机模块(我称为Motor)<br>那么事不宜迟，开始吧!!!<br><img src="https://tse2-mm.cn.bing.net/th/id/OIP-C._hky6fwlTmniEcA4v51hIwHaEK?rs=1&amp;pid=ImgDetMain" alt="fighting" title="劳累在校生"><h1 id="MPU6050模块"><a href="#MPU6050模块" class="headerlink" title="MPU6050模块"></a>MPU6050模块</h1><h2 id="何为MPU6050？"><a href="#何为MPU6050？" class="headerlink" title="何为MPU6050？"></a>何为MPU6050？</h2><img src="https://user-images.githubusercontent.com/107638696/241324971-43b8fe88-447d-4c2d-9296-4b3aaa50f4ce.png" alt="MPU6050" title="MPU6050"><br><strong>1.MPU6050是一个6轴姿态传感器（3轴加速度计和3轴陀螺仪传感器），可以测量芯片自身X、Y、Z轴的加速度、角度参数(角速度)，通过数据融合，可以得到姿态角(由上图所示)。并且我们可以看到横向的是x轴，而纵向的为y轴，垂直与芯片的为z轴，这里我们可以类比中学时期的立体几何坐标图</strong>  </li></ol><p><img src="https://clubimg.szlcsc.com/upload/postuploadimage/image/2018-10-26/A9B9913E977B434C84CEB252E6506B84_189.png" alt="姿态角" title="姿态角 此图借用"><br><strong>2. 以立创给的图为例，飞机机身对应三个轴的夹角，机头下倾或者上仰，这个轴的夹角叫俯仰（pitch）。飞机机身左翻滚或者右翻滚，这个轴的夹角叫做滚转（roll），飞机机身向左转向或者向右转向，这个轴的夹角叫做偏航（raw）。(2024-6-18 记得插入解释视频)</strong>  </p><p><strong>续—-欧拉角是为表示姿态的一种参数。为了保持飞机的姿态平稳（无人机也是）我们必须得到一个精确且问题的角；（此处—-江协科技有提过）一种传感器不能获得精确且稳定的欧拉角，要获得精确稳定的欧拉角，需要多个传感器进行数据融合。常见的数据融合算法有互补滤波、卡尔曼滤波等。</strong></p><p><strong>提示: 加速度只有静态稳定性，不具有动态稳定新性；而陀螺仪传感器只有动态稳定性，而不具有静态稳定性。 具体请看:”<a href="https://blog.csdn.net/qq_44852376/article/details/130470815">https://blog.csdn.net/qq_44852376/article/details/130470815</a></strong><br>此CSDN博客的基本介绍，我就不在此处一一介绍了</p><h2 id="MPU6050模块的基本参数"><a href="#MPU6050模块的基本参数" class="headerlink" title="MPU6050模块的基本参数"></a>MPU6050模块的基本参数</h2><p><strong>1. 16位ADC采集传感器的模拟信号，量化范围：-32768~32767。</strong></p><p><strong>2. 加速度计满量程范围选择：±2、±4、±8、±16(g) g表示重力加速度1g=9.8m/s²</strong></p><p><strong>3. 陀螺仪满量程选择：±250、±500、±1000、±2000(°/sec) 每秒钟旋转了多少度（如果测量的物体运动非常剧烈，可以把满量程选择大一些，如果运动比较平缓，可以选择更小的量程，这样分辨率会更大。）</strong></p><p><strong>4. 可配置的数字低通滤波器（在这个芯片可以配置寄存器来选择对输出的数据进行低通滤波）</strong></p><p><strong>5. 可配置的时钟源和可配置的采样分频（为AD转换和芯片内部其他电路提供时钟，控制分频系数，可以控制AD转化的快慢。）</strong></p><p><strong>6. I2C从机地址：当AD0=0时，地址为1101000，当AD0=1时，地址为1101001，AD0是板子引出来的引脚，可以调节I2C从机地址的最低位。（16位表示时，有两种方式，①是把1101000转成16进制0x68，但是因为还有一位读写位，一般使用（0x68&lt;&lt;1）|读写位。读1写0。②把0x68左移一位后的数据当作从机地址，也就是0xD0，再或上读写位。写就发送0xD0，读就发送0xD1。 这里读写位很重要。后面写代码具体用到</strong></p><h2 id="MPU6050读写"><a href="#MPU6050读写" class="headerlink" title="MPU6050读写"></a>MPU6050读写</h2><p><strong>2024-6-19 更新</strong></p><h3 id="软件读写MPU6050"><a href="#软件读写MPU6050" class="headerlink" title="软件读写MPU6050"></a>软件读写MPU6050</h3><p>Tips: 这里我就不写头文件了，头文件同样写在HardWare中</p><h4 id="1-MyI2C-c-HardWare"><a href="#1-MyI2C-c-HardWare" class="headerlink" title="1. MyI2C.c\HardWare"></a><strong>1. MyI2C.c\HardWare</strong></h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Delay.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">以下三个操作是来封装读写操作的:</span></span><br><span class="line"><span class="comment">1、 SCL写操作</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2、 SDA写操作</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">3、 SDA读操作</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">移植到别的单片机时，只需要对以下四个函数进行修改即可。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MyI2C_W_SCL</span><span class="params">(<span class="type">uint8_t</span> BitValue)</span></span><br><span class="line">&#123;</span><br><span class="line">GPIO_WriteBit(GPIOB,GPIO_Pin_10, (BitAction)BitValue);</span><br><span class="line">Delay_us(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MyI2C_W_SDA</span><span class="params">(<span class="type">uint8_t</span> BitValue)</span></span><br><span class="line">&#123;</span><br><span class="line">GPIO_WriteBit(GPIOB,GPIO_Pin_11, (BitAction)BitValue);</span><br><span class="line">Delay_us(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">MyI2C_R_SDA</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> BitValue;</span><br><span class="line">BitValue = GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_11);</span><br><span class="line">Delay_us(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">return</span> BitValue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/****************************************</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">通过GPIO口模拟I2C通讯，其中Out_PP --- 开漏输出也可以接收数据</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">开漏输出是低电平 + 高阻态</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">****************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">MyI2C_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB,ENABLE);</span><br><span class="line"></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_OD;    <span class="comment">//这里是开漏输出</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10 | GPIO_Pin_11;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOB,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化结束后，给端口配置高电压</span></span><br><span class="line">GPIO_SetBits(GPIOB,GPIO_Pin_10 | GPIO_Pin_11);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/************************</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">六个基本单元之一: 起始条件</span></span><br><span class="line"><span class="comment">SDA先拉低 ，SCL后拉低</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">MyI2C_Start</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">MyI2C_W_SDA(<span class="number">1</span>);</span><br><span class="line">MyI2C_W_SCL(<span class="number">1</span>);</span><br><span class="line">MyI2C_W_SDA(<span class="number">0</span>);</span><br><span class="line">MyI2C_W_SCL(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/************************</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">六个基本单元之一: 终止条件</span></span><br><span class="line"><span class="comment">SCL拉高，SDA后拉高</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">除了终止时 SCL以高电平结束，所有其他的都是以SCL低电平结束</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">MyI2C_Stop</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">MyI2C_W_SDA(<span class="number">0</span>);</span><br><span class="line">MyI2C_W_SCL(<span class="number">1</span>);</span><br><span class="line">MyI2C_W_SDA(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/************************</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">六个基本单元之一: 发送数据</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">MyI2C_SendByte</span><span class="params">(<span class="type">uint8_t</span> Byte)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">MyI2C_W_SDA(Byte &amp; (<span class="number">0x80</span> &gt;&gt; i)); <span class="comment">//依次从高位到低位接收</span></span><br><span class="line">MyI2C_W_SCL(<span class="number">1</span>); <span class="comment">//发送数据后 先拉高</span></span><br><span class="line">MyI2C_W_SCL(<span class="number">0</span>);  <span class="comment">//最终拉低</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/************************</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">六个基本单元之一: 接收数据</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">接收读写都是 读写分离 低电平时谁发送，谁就将Bit写上，谁接收谁就释放SCL </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">低电平为写的时间，高电平为读的时间</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*************************/</span></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">MyI2C_ReceiveByte</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> i,Byte = <span class="number">0x00</span>;</span><br><span class="line">MyI2C_W_SDA(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">MyI2C_W_SCL(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> (MyI2C_R_SDA() == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">Byte |= (<span class="number">0x80</span> &gt;&gt; i);</span><br><span class="line">&#125;</span><br><span class="line">MyI2C_W_SCL(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> Byte;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/************************</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">六个基本单元之一: 发送应答</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">MyI2C_SendACK</span><span class="params">(<span class="type">uint8_t</span> AckBit)</span></span><br><span class="line">&#123;</span><br><span class="line">MyI2C_W_SDA(AckBit); <span class="comment">//依次从高位到低位接收</span></span><br><span class="line">MyI2C_W_SCL(<span class="number">1</span>); <span class="comment">//发送数据后 先拉高</span></span><br><span class="line">MyI2C_W_SCL(<span class="number">0</span>);  <span class="comment">//最终拉低</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/************************</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">六个基本单元之一: 发送应答</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*************************/</span></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">MyI2C_ReceiveACK</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> AckBit;<span class="comment">//定义应答位变量</span></span><br><span class="line">MyI2C_W_SDA(<span class="number">1</span>);<span class="comment">//接收前，主机先确保释放SDA，避免干扰从机的数据发送</span></span><br><span class="line">MyI2C_W_SCL(<span class="number">1</span>);<span class="comment">//释放SCL，主机机在SCL高电平期间读取SDA</span></span><br><span class="line">AckBit = MyI2C_R_SDA();<span class="comment">//将应答位存储到变量里</span></span><br><span class="line">MyI2C_W_SCL(<span class="number">0</span>);<span class="comment">//拉低SCL，开始下一个时序模块</span></span><br><span class="line"><span class="keyword">return</span> AckBit;<span class="comment">//返回定义应答位变量</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-MPU6050-Reg-h-Hardware"><a href="#2-MPU6050-Reg-h-Hardware" class="headerlink" title="2.MPU6050_Reg.h\Hardware"></a><strong>2.MPU6050_Reg.h\Hardware</strong></h4><p><strong>作用:把寄存器地址写在同一个头文件中，方便调用并且增强代码可读性</strong><br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __MPU6050_REG_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __MPU6050_REG_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>MPU6050_SMPLRT_DIV0x19</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>MPU6050_CONFIG0x1A</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>MPU6050_GYRO_CONFIG0x1B</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>MPU6050_ACCEL_CONFIG0x1C</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>MPU6050_ACCEL_XOUT_H0x3B</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>MPU6050_ACCEL_XOUT_L0x3C</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>MPU6050_ACCEL_YOUT_H0x3D</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>MPU6050_ACCEL_YOUT_L0x3E</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>MPU6050_ACCEL_ZOUT_H0x3F</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>MPU6050_ACCEL_ZOUT_L0x40</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>MPU6050_TEMP_OUT_H0x41</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>MPU6050_TEMP_OUT_L0x42</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>MPU6050_GYRO_XOUT_H0x43</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>MPU6050_GYRO_XOUT_L0x44</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>MPU6050_GYRO_YOUT_H0x45</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>MPU6050_GYRO_YOUT_L0x46</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>MPU6050_GYRO_ZOUT_H0x47</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>MPU6050_GYRO_ZOUT_L0x48</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>MPU6050_PWR_MGMT_10x6B</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>MPU6050_PWR_MGMT_20x6C</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>MPU6050_WHO_AM_I0x75</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure></p><h4 id="3-MPU6050-c-Hardware"><a href="#3-MPU6050-c-Hardware" class="headerlink" title="3. MPU6050.c\Hardware"></a><strong>3. MPU6050.c\Hardware</strong></h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device heade</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;MyI2C.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//这里的定义是为了方便更改接收地址</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MPU6050_ADDRESS    0xD0</span></span><br><span class="line"><span class="comment">/***************************************</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">指定地址写:</span></span><br><span class="line"><span class="comment">1、先写给从机地址</span></span><br><span class="line"><span class="comment">2、写给指定寄存器地址</span></span><br><span class="line"><span class="comment">3、传输数据Data</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">在这里，MyI2C_ReceiveACK();  是从机接收应答，为0时表示，从机接收到，反之，没有接收到。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">****************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MPU6050_WriteReg</span><span class="params">(<span class="type">uint8_t</span> RegAddress, <span class="type">uint8_t</span> Data)</span></span><br><span class="line">&#123;</span><br><span class="line">MyI2C_Start();    <span class="comment">//开启时序</span></span><br><span class="line">MyI2C_SendByte(MPU6050_ADDRESS);    <span class="comment">//指定MPU6050地址写</span></span><br><span class="line">MyI2C_ReceiveACK();</span><br><span class="line">MyI2C_SendByte(RegAddress);     <span class="comment">//找到指定地址</span></span><br><span class="line">MyI2C_ReceiveACK();</span><br><span class="line">MyI2C_SendByte(Data);       <span class="comment">//写入数据</span></span><br><span class="line">MyI2C_ReceiveACK();</span><br><span class="line">MyI2C_Stop();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***************************************</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">指定地址读:</span></span><br><span class="line"><span class="comment">1、先写给从机地址</span></span><br><span class="line"><span class="comment">2、写给指定寄存器地址</span></span><br><span class="line"><span class="comment">在这里，MyI2C_ReceiveACK();  是从机接收应答，为0时表示，从机接收到，反之，没有接收到。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">MyI2C_SendACK(1); 表示主机不给从机应答</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">****************************************/</span></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">MPU6050_ReadReg</span><span class="params">(<span class="type">uint8_t</span> RegAddress)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> Data;</span><br><span class="line"></span><br><span class="line">MyI2C_Start();    <span class="comment">//开启时序</span></span><br><span class="line">MyI2C_SendByte(MPU6050_ADDRESS);    <span class="comment">//指定MPU6050地址写</span></span><br><span class="line">MyI2C_ReceiveACK();</span><br><span class="line">MyI2C_SendByte(RegAddress);     <span class="comment">//找到指定地址</span></span><br><span class="line">MyI2C_ReceiveACK();</span><br><span class="line"></span><br><span class="line">MyI2C_Start();<span class="comment">//转入读的时序，要重新起始</span></span><br><span class="line">MyI2C_SendByte(MPU6050_ADDRESS | <span class="number">0x01</span>);<span class="comment">//先传输MPU6050的地址 ,读地址要或上 0x01</span></span><br><span class="line">MyI2C_ReceiveACK();</span><br><span class="line">Data = MyI2C_ReceiveByte();</span><br><span class="line">MyI2C_SendACK(<span class="number">1</span>);</span><br><span class="line">MyI2C_Stop();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> Data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/***************************</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">初始化MPU6050</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">****************************/</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MPU6050_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">MyI2C_Init();<span class="comment">//先初始化底层的I2C</span></span><br><span class="line"><span class="comment">/*MPU6050寄存器初始化，需要对照MPU6050手册的寄存器描述配置，此处仅配置了部分重要的寄存器*/</span></span><br><span class="line">MPU6050_WriteReg(MPU6050_PWR_MGMT_1, <span class="number">0x01</span>);<span class="comment">//电源管理寄存器1，取消睡眠模式，选择时钟源为X轴陀螺仪</span></span><br><span class="line">MPU6050_WriteReg(MPU6050_PWR_MGMT_2, <span class="number">0x00</span>);<span class="comment">//电源管理寄存器2，保持默认值0，所有轴均不待机</span></span><br><span class="line">MPU6050_WriteReg(MPU6050_SMPLRT_DIV, <span class="number">0x09</span>);<span class="comment">//采样率分频寄存器，配置采样率</span></span><br><span class="line">MPU6050_WriteReg(MPU6050_CONFIG, <span class="number">0x06</span>);<span class="comment">//配置寄存器，配置DLPF</span></span><br><span class="line">MPU6050_WriteReg(MPU6050_GYRO_CONFIG, <span class="number">0x18</span>);<span class="comment">//陀螺仪配置寄存器，选择满量程为±2000°/s</span></span><br><span class="line">MPU6050_WriteReg(MPU6050_ACCEL_CONFIG, <span class="number">0x18</span>);<span class="comment">//加速度计配置寄存器，选择满量程为±16g</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用指针的地址传递参数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">MPU6050_GetData</span><span class="params">(<span class="type">int16_t</span> *AccX,<span class="type">int16_t</span> *AccY,<span class="type">int16_t</span> *AccZ,</span></span><br><span class="line"><span class="params"><span class="type">int16_t</span> *GyroX,<span class="type">int16_t</span> *GyroY,<span class="type">int16_t</span> *GyroZ)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> DataH, DataL;<span class="comment">//定义数据高8位和低8位的变量</span></span><br><span class="line"></span><br><span class="line">DataH = MPU6050_ReadReg(MPU6050_ACCEL_XOUT_H);<span class="comment">//读取加速度计X轴的高8位数据</span></span><br><span class="line">DataL = MPU6050_ReadReg(MPU6050_ACCEL_XOUT_L);<span class="comment">//读取加速度计X轴的低8位数据</span></span><br><span class="line">*AccX = (DataH &lt;&lt; <span class="number">8</span>) | DataL;<span class="comment">//数据拼接，通过输出参数返回</span></span><br><span class="line"></span><br><span class="line">DataH = MPU6050_ReadReg(MPU6050_ACCEL_YOUT_H);<span class="comment">//读取加速度计Y轴的高8位数据</span></span><br><span class="line">DataL = MPU6050_ReadReg(MPU6050_ACCEL_YOUT_L);<span class="comment">//读取加速度计Y轴的低8位数据</span></span><br><span class="line">*AccY = (DataH &lt;&lt; <span class="number">8</span>) | DataL;<span class="comment">//数据拼接，通过输出参数返回</span></span><br><span class="line"></span><br><span class="line">DataH = MPU6050_ReadReg(MPU6050_ACCEL_ZOUT_H);<span class="comment">//读取加速度计Z轴的高8位数据</span></span><br><span class="line">DataL = MPU6050_ReadReg(MPU6050_ACCEL_ZOUT_L);<span class="comment">//读取加速度计Z轴的低8位数据</span></span><br><span class="line">*AccZ = (DataH &lt;&lt; <span class="number">8</span>) | DataL;<span class="comment">//数据拼接，通过输出参数返回</span></span><br><span class="line"></span><br><span class="line">DataH = MPU6050_ReadReg(MPU6050_GYRO_XOUT_H);<span class="comment">//读取陀螺仪X轴的高8位数据</span></span><br><span class="line">DataL = MPU6050_ReadReg(MPU6050_GYRO_XOUT_L);<span class="comment">//读取陀螺仪X轴的低8位数据</span></span><br><span class="line">*GyroX = (DataH &lt;&lt; <span class="number">8</span>) | DataL;<span class="comment">//数据拼接，通过输出参数返回</span></span><br><span class="line"></span><br><span class="line">DataH = MPU6050_ReadReg(MPU6050_GYRO_YOUT_H);<span class="comment">//读取陀螺仪Y轴的高8位数据</span></span><br><span class="line">DataL = MPU6050_ReadReg(MPU6050_GYRO_YOUT_L);<span class="comment">//读取陀螺仪Y轴的低8位数据</span></span><br><span class="line">*GyroY = (DataH &lt;&lt; <span class="number">8</span>) | DataL;<span class="comment">//数据拼接，通过输出参数返回</span></span><br><span class="line"></span><br><span class="line">DataH = MPU6050_ReadReg(MPU6050_GYRO_ZOUT_H);<span class="comment">//读取陀螺仪Z轴的高8位数据</span></span><br><span class="line">DataL = MPU6050_ReadReg(MPU6050_GYRO_ZOUT_L);<span class="comment">//读取陀螺仪Z轴的低8位数据</span></span><br><span class="line">*GyroZ = (DataH &lt;&lt; <span class="number">8</span>) | DataL;<span class="comment">//数据拼接，通过输出参数返回</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="硬件与MPU6050进行通讯"><a href="#硬件与MPU6050进行通讯" class="headerlink" title="硬件与MPU6050进行通讯"></a><strong>硬件与MPU6050进行通讯</strong></h3><p><strong>Tips: STM32自带有2个I2C硬件资源,分别是I2C1,I2C2，并且它们的外设时钟挂在在APB1时钟总线上；在这里，那些软件模拟的I2C的应答呀，SCL，SDA写读都被标准库封装成函数，我们直接调用即可。无需再写一个底层I2C。</strong>  </p><h4 id="MPU6050-Hardware"><a href="#MPU6050-Hardware" class="headerlink" title="MPU6050\Hardware"></a><strong>MPU6050\Hardware</strong></h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;MPU6050_Reg.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MPU6050_ADDRESS0xD0<span class="comment">//MPU6050的I2C从机地址</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//等待事件监控函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">MPU6050_WaitEven</span><span class="params">(I2C_TypeDef* I2Cx, <span class="type">uint32_t</span> I2C_EVENT)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint32_t</span> Time = <span class="number">10000</span>;</span><br><span class="line"><span class="keyword">while</span>(I2C_CheckEvent(I2Cx,I2C_EVENT) != SUCCESS)</span><br><span class="line">&#123;</span><br><span class="line">Time--;</span><br><span class="line"><span class="keyword">if</span> (Time == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 函    数：MPU6050写寄存器</span></span><br><span class="line"><span class="comment">  * 参    数：RegAddress 寄存器地址，范围：参考MPU6050手册的寄存器描述</span></span><br><span class="line"><span class="comment">  * 参    数：Data 要写入寄存器的数据，范围：0x00~0xFF</span></span><br><span class="line"><span class="comment">  * 返 回 值：无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">MPU6050_WriteReg</span><span class="params">(<span class="type">uint8_t</span> RegAddress, <span class="type">uint8_t</span> Data)</span></span><br><span class="line">&#123;</span><br><span class="line">I2C_GenerateSTART(I2C2,ENABLE);   <span class="comment">//替换软件写的I2C_Start()</span></span><br><span class="line">MPU6050_WaitEven(I2C2,I2C_EVENT_MASTER_MODE_SELECT);  <span class="comment">//监控事件5是否成功结束</span></span><br><span class="line"></span><br><span class="line">I2C_Send7bitAddress(I2C2,MPU6050_ADDRESS,I2C_Direction_Transmitter);   <span class="comment">//硬件I2C发送从机地址，方向为发送</span></span><br><span class="line">MPU6050_WaitEven(I2C2,I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED);     <span class="comment">//事件6</span></span><br><span class="line"></span><br><span class="line">I2C_SendData(I2C2,RegAddress);</span><br><span class="line">MPU6050_WaitEven(I2C2,I2C_EVENT_MASTER_BYTE_TRANSMITTING);     <span class="comment">//事件8</span></span><br><span class="line"></span><br><span class="line">I2C_SendData(I2C2,Data);</span><br><span class="line">MPU6050_WaitEven(I2C2,I2C_EVENT_MASTER_BYTE_TRANSMITTED);     <span class="comment">//事件8v2就是事件主机传输结束</span></span><br><span class="line"></span><br><span class="line">I2C_GenerateSTOP(I2C2,ENABLE);     <span class="comment">//结束传输</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 函    数：MPU6050读寄存器</span></span><br><span class="line"><span class="comment">  * 参    数：RegAddress 寄存器地址，范围：参考MPU6050手册的寄存器描述</span></span><br><span class="line"><span class="comment">  * 返 回 值：读取寄存器的数据，范围：0x00~0xFF</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">MPU6050_ReadReg</span><span class="params">(<span class="type">uint8_t</span> RegAddress)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> Data;</span><br><span class="line">I2C_GenerateSTART(I2C2,ENABLE);   <span class="comment">//替换软件写的I2C_Start()</span></span><br><span class="line">MPU6050_WaitEven(I2C2,I2C_EVENT_MASTER_MODE_SELECT);  <span class="comment">//监控事件5是否成功结束</span></span><br><span class="line"></span><br><span class="line">I2C_Send7bitAddress(I2C2,MPU6050_ADDRESS,I2C_Direction_Transmitter);   <span class="comment">//硬件I2C发送从机地址，方向为发送</span></span><br><span class="line">MPU6050_WaitEven(I2C2,I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED);     <span class="comment">//事件6</span></span><br><span class="line"></span><br><span class="line">I2C_SendData(I2C2,RegAddress);</span><br><span class="line">MPU6050_WaitEven(I2C2,I2C_EVENT_MASTER_BYTE_TRANSMITTED);     <span class="comment">//事件8v2 设置为当传输结束后</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//重新指定I2C2模式</span></span><br><span class="line">I2C_GenerateSTART(I2C2,ENABLE);   <span class="comment">//替换软件写的I2C_Start()</span></span><br><span class="line">MPU6050_WaitEven(I2C2,I2C_EVENT_MASTER_MODE_SELECT);  <span class="comment">//监控事件5是否成功结束</span></span><br><span class="line"></span><br><span class="line">I2C_Send7bitAddress(I2C2,MPU6050_ADDRESS,I2C_Direction_Receiver);   <span class="comment">//硬件I2C发送从机地址，方向为发送</span></span><br><span class="line">MPU6050_WaitEven(I2C2,I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED);     <span class="comment">//事件6</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//这里我们需要在检测事件前，进行ACK为失能，并且stop生效，否则就会多读一个字符</span></span><br><span class="line">I2C_AcknowledgeConfig(I2C2,DISABLE);</span><br><span class="line">I2C_GenerateSTOP(I2C2,ENABLE);</span><br><span class="line"></span><br><span class="line">MPU6050_WaitEven(I2C2,I2C_EVENT_MASTER_BYTE_RECEIVED);<span class="comment">//等待EV7</span></span><br><span class="line">Data = I2C_ReceiveData(I2C2);    <span class="comment">//获取数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//最后要把ACK使能，因为我们在配置的时候默认ACK使能</span></span><br><span class="line">I2C_AcknowledgeConfig(I2C2,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> Data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">MPU6050_GetID</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> MPU6050_ReadReg(MPU6050_WHO_AM_I);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 函    数：MPU6050初始化</span></span><br><span class="line"><span class="comment">  * 参    数：无</span></span><br><span class="line"><span class="comment">  * 返 回 值：无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">MPU6050_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//开启时钟</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_I2C2,ENABLE);</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB,ENABLE);</span><br><span class="line"></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_OD;</span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10 | GPIO_Pin_11;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOB,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">I2C_InitTypeDef I2C_InitStructure;</span><br><span class="line">I2C_InitStructure.I2C_Ack = I2C_Ack_Enable;     <span class="comment">//默认接收一个数据给应答，如果想修改，可以使用I2C的函数进行修改</span></span><br><span class="line">I2C_InitStructure.I2C_AcknowledgedAddress = I2C_AcknowledgedAddress_7bit;</span><br><span class="line">I2C_InitStructure.I2C_ClockSpeed = <span class="number">50000</span>;</span><br><span class="line">I2C_InitStructure.I2C_DutyCycle = I2C_DutyCycle_2;     <span class="comment">//时间占空比 两个比很接近，随便给哪给都行</span></span><br><span class="line">I2C_InitStructure.I2C_Mode = I2C_Mode_I2C;</span><br><span class="line">I2C_InitStructure.I2C_OwnAddress1 = <span class="number">0x00</span>;           <span class="comment">//用于指定stm32自身地址，被其他主机呼叫，现在用不到，即随便给一个</span></span><br><span class="line"></span><br><span class="line">I2C_Init(I2C2,&amp;I2C_InitStructure);</span><br><span class="line">I2C_Cmd(I2C2,ENABLE);    <span class="comment">//使能I2C2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//先初始化底层的I2C</span></span><br><span class="line"><span class="comment">/*MPU6050寄存器初始化，需要对照MPU6050手册的寄存器描述配置，此处仅配置了部分重要的寄存器*/</span></span><br><span class="line">MPU6050_WriteReg(MPU6050_PWR_MGMT_1, <span class="number">0x01</span>);<span class="comment">//电源管理寄存器1，取消睡眠模式，选择时钟源为X轴陀螺仪</span></span><br><span class="line">MPU6050_WriteReg(MPU6050_PWR_MGMT_2, <span class="number">0x00</span>);<span class="comment">//电源管理寄存器2，保持默认值0，所有轴均不待机</span></span><br><span class="line">MPU6050_WriteReg(MPU6050_SMPLRT_DIV, <span class="number">0x09</span>);<span class="comment">//采样率分频寄存器，配置采样率</span></span><br><span class="line">MPU6050_WriteReg(MPU6050_CONFIG, <span class="number">0x06</span>);<span class="comment">//配置寄存器，配置DLPF</span></span><br><span class="line">MPU6050_WriteReg(MPU6050_GYRO_CONFIG, <span class="number">0x18</span>);<span class="comment">//陀螺仪配置寄存器，选择满量程为±2000°/s</span></span><br><span class="line">MPU6050_WriteReg(MPU6050_ACCEL_CONFIG, <span class="number">0x18</span>);<span class="comment">//加速度计配置寄存器，选择满量程为±16g</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用指针的地址传递参数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">MPU6050_GetData</span><span class="params">(<span class="type">int16_t</span> *AccX,<span class="type">int16_t</span> *AccY,<span class="type">int16_t</span> *AccZ,</span></span><br><span class="line"><span class="params"><span class="type">int16_t</span> *GyroX,<span class="type">int16_t</span> *GyroY,<span class="type">int16_t</span> *GyroZ)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> DataH, DataL;<span class="comment">//定义数据高8位和低8位的变量</span></span><br><span class="line"></span><br><span class="line">DataH = MPU6050_ReadReg(MPU6050_ACCEL_XOUT_H);<span class="comment">//读取加速度计X轴的高8位数据</span></span><br><span class="line">DataL = MPU6050_ReadReg(MPU6050_ACCEL_XOUT_L);<span class="comment">//读取加速度计X轴的低8位数据</span></span><br><span class="line">*AccX = (DataH &lt;&lt; <span class="number">8</span>) | DataL;<span class="comment">//数据拼接，通过输出参数返回</span></span><br><span class="line"></span><br><span class="line">DataH = MPU6050_ReadReg(MPU6050_ACCEL_YOUT_H);<span class="comment">//读取加速度计Y轴的高8位数据</span></span><br><span class="line">DataL = MPU6050_ReadReg(MPU6050_ACCEL_YOUT_L);<span class="comment">//读取加速度计Y轴的低8位数据</span></span><br><span class="line">*AccY = (DataH &lt;&lt; <span class="number">8</span>) | DataL;<span class="comment">//数据拼接，通过输出参数返回</span></span><br><span class="line"></span><br><span class="line">DataH = MPU6050_ReadReg(MPU6050_ACCEL_ZOUT_H);<span class="comment">//读取加速度计Z轴的高8位数据</span></span><br><span class="line">DataL = MPU6050_ReadReg(MPU6050_ACCEL_ZOUT_L);<span class="comment">//读取加速度计Z轴的低8位数据</span></span><br><span class="line">*AccZ = (DataH &lt;&lt; <span class="number">8</span>) | DataL;<span class="comment">//数据拼接，通过输出参数返回</span></span><br><span class="line"></span><br><span class="line">DataH = MPU6050_ReadReg(MPU6050_GYRO_XOUT_H);<span class="comment">//读取陀螺仪X轴的高8位数据</span></span><br><span class="line">DataL = MPU6050_ReadReg(MPU6050_GYRO_XOUT_L);<span class="comment">//读取陀螺仪X轴的低8位数据</span></span><br><span class="line">*GyroX = (DataH &lt;&lt; <span class="number">8</span>) | DataL;<span class="comment">//数据拼接，通过输出参数返回</span></span><br><span class="line"></span><br><span class="line">DataH = MPU6050_ReadReg(MPU6050_GYRO_YOUT_H);<span class="comment">//读取陀螺仪Y轴的高8位数据</span></span><br><span class="line">DataL = MPU6050_ReadReg(MPU6050_GYRO_YOUT_L);<span class="comment">//读取陀螺仪Y轴的低8位数据</span></span><br><span class="line">*GyroY = (DataH &lt;&lt; <span class="number">8</span>) | DataL;<span class="comment">//数据拼接，通过输出参数返回</span></span><br><span class="line"></span><br><span class="line">DataH = MPU6050_ReadReg(MPU6050_GYRO_ZOUT_H);<span class="comment">//读取陀螺仪Z轴的高8位数据</span></span><br><span class="line">DataL = MPU6050_ReadReg(MPU6050_GYRO_ZOUT_L);<span class="comment">//读取陀螺仪Z轴的低8位数据</span></span><br><span class="line">*GyroZ = (DataH &lt;&lt; <span class="number">8</span>) | DataL;<span class="comment">//数据拼接，通过输出参数返回</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="读取MPU6050实现"><a href="#读取MPU6050实现" class="headerlink" title="读取MPU6050实现"></a><strong>读取MPU6050实现</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;OLED.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;MPU6050.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> ID;</span><br><span class="line"><span class="type">int16_t</span> AX,AY,AZ,GX,GY,GZ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_Init();</span><br><span class="line">MPU6050_Init();</span><br><span class="line">OLED_ShowString(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;ID:&quot;</span>);</span><br><span class="line">ID = MPU6050_GetID();</span><br><span class="line">OLED_ShowHexNum(<span class="number">1</span>,<span class="number">4</span>,ID,<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">MPU6050_GetData(&amp;AX,&amp;AY,&amp;AZ,&amp;GX,&amp;GY,&amp;GZ);</span><br><span class="line">OLED_ShowSignedNum(<span class="number">2</span>,<span class="number">1</span>,AX,<span class="number">5</span>);</span><br><span class="line">OLED_ShowSignedNum(<span class="number">3</span>,<span class="number">1</span>,AY,<span class="number">5</span>);</span><br><span class="line">OLED_ShowSignedNum(<span class="number">4</span>,<span class="number">1</span>,AZ,<span class="number">5</span>);</span><br><span class="line">OLED_ShowSignedNum(<span class="number">2</span>,<span class="number">9</span>,GX,<span class="number">5</span>);</span><br><span class="line">OLED_ShowSignedNum(<span class="number">3</span>,<span class="number">9</span>,GY,<span class="number">5</span>);</span><br><span class="line">OLED_ShowSignedNum(<span class="number">4</span>,<span class="number">9</span>,GZ,<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Tips: 这里的AX,AY,AZ分别代表着x轴上的加速度，y轴上的加速度，z轴上的加速度。而GX,GY,GZ代表的x轴的角速度，y轴的角速度，z轴的角速度。</p>]]></content>
    
    
    <summary type="html">pid控制介绍</summary>
    
    
    
    
    <category term="Technology" scheme="https://madao-luv.github.io/tags/Technology/"/>
    
  </entry>
  
  <entry>
    <title>电路小知识</title>
    <link href="https://madao-luv.github.io/posts/165e2cae.html"/>
    <id>https://madao-luv.github.io/posts/165e2cae.html</id>
    <published>2024-05-22T16:37:22.329Z</published>
    <updated>2024-06-04T01:19:22.849Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章"><a href="#第一章" class="headerlink" title="第一章:"></a>第一章:</h1><p>Tips:<br><strong>在高中时期,我们都会把公式简单地写成乘/除法,但是在这个&lt;&lt;电路&gt;&gt;这门课中,我们要学会将除法换为求导—-微分,把乘法换为求积—-无上限积分</strong><br>重点学习:<br><strong>1.电压,电流的参考方向</strong><br><strong>2.电阻元件和电源元件的特性</strong><br><strong>3.基尔霍夫定律(KCL,KVL)</strong><br>电路是关于<strong>能量的传输,分配与转换</strong>以及<strong>信息传递,控制与处理</strong></p><h2 id="1-1-基本认识"><a href="#1-1-基本认识" class="headerlink" title="1.1.基本认识"></a>1.1.基本认识</h2><h3 id="1-1-1-电路"><a href="#1-1-1-电路" class="headerlink" title="1.1.1.电路"></a>1.1.1.电路</h3><p>1.反应实际电路部件的主要电磁性质的理想电路的元件及其组合<br>2.理想电路元件:有某种确定的电磁性能的理想元件<br>(Tips:在大学,我们一般称<strong>入为—-激励,而出为—-响应</strong>，它们对应着高中所学电路的出入。)</p><h3 id="1-1-2-五种理想电路元件-基本元件"><a href="#1-1-2-五种理想电路元件-基本元件" class="headerlink" title="1.1.2.五种理想电路元件(基本元件)"></a>1.1.2.五种理想电路元件(基本元件)</h3><p>1.(符号:R) 电阻元件: 表示消耗电能的元件<br>2.(符号:L) 电感元件: 表示产生磁场的元件，储存磁场能量的元件<br>3.(符号:C) 电容元件: 表示产出电场的元件，储存电场能量的元件<br>4.(符号:I,U) 电压源和电流源: 表示将其他形式的能量转变为电能的元件 (<strong>还可以用F()函数式来表示</strong>)<br>Tips:<br>1.只有两个端子<br>2.可以用电压或电流按数字方式来描述<br>3.不能被分解成其他元件</p><h2 id="1-2-电流"><a href="#1-2-电流" class="headerlink" title="1.2 电流"></a>1.2 电流</h2><h3 id="1-2-1-直流和交流"><a href="#1-2-1-直流和交流" class="headerlink" title="1.2.1 直流和交流"></a>1.2.1 直流和交流</h3><p>直流:大小方向都不变的电流 而交流,<strong>可以简单地认为是，不是直流的都是交流</strong><br>我们有一个公式: sin(wt + $\Theta$) —— 当w—-&gt;0的为直流，因为它没有频率，一直保持地是一种直线  </p><h3 id="1-2-2-一个简单的小表格"><a href="#1-2-2-一个简单的小表格" class="headerlink" title="1.2.2 一个简单的小表格"></a>1.2.2 一个简单的小表格</h3><div class="table-container"><table><thead><tr><th>w</th><th>L(电感)</th><th>C(电容)</th></tr></thead><tbody><tr><td>无穷</td><td>开路(类似于开关未闭合)</td><td>导线</td></tr><tr><td>w(正常值)</td><td>阻抗形态</td><td>阻抗形态</td></tr><tr><td>0</td><td>导线</td><td>开路(类似于开关未闭合)</td></tr></tbody></table></div><h3 id="1-2-3-电流公式"><a href="#1-2-3-电流公式" class="headerlink" title="1.2.3 电流公式"></a>1.2.3 电流公式</h3><p>1.我们在高中时期用到的电流计算公式是 $\frac{Q}{t}=I$,因为我们假定电流大小不变,但是我们在实际的电流计算中，电流是不稳定的，难以去计算(在一段时间内)，所以我们引入极限以及微分<br>2.<strong>暂时没有找到替代图片</strong></p><h3 id="1-2-4-参考方向"><a href="#1-2-4-参考方向" class="headerlink" title="1.2.4 参考方向"></a>1.2.4 参考方向</h3><p>电流的参考方向: 任意假定一个正电荷运动的方向即为电流的参考方向。<br><img src="https://img0.baidu.com/it/u=904100278,1402036509&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=632&amp;h=279 电流的参考方向" alt="电流的参考方向"></p><ol><li>这个是参考电流与实际参考电流一致,所以 I &gt; 0</li><li>这个是参考电流与实际参考电流相反,所以 I &lt; 0<br>Tips:我们常用箭头来表示电流方向<h2 id="1-3-电压"><a href="#1-3-电压" class="headerlink" title="1.3 电压"></a>1.3 电压</h2><h3 id="1-3-1-电位和电压"><a href="#1-3-1-电位和电压" class="headerlink" title="1.3.1 电位和电压"></a>1.3.1 电位和电压</h3>电位—-&gt; <strong>单位正电荷q从电路中一点移动到参考电位(参考电位为0处)时，电场力做功的大小</strong><br>电压—-&gt; <strong>单位正电荷q从电路中一点移动到另一点时的电功力做功(w)的大小</strong><h3 id="1-3-2-电压的参考方向以及关联参考方向"><a href="#1-3-2-电压的参考方向以及关联参考方向" class="headerlink" title="1.3.2 电压的参考方向以及关联参考方向"></a>1.3.2 电压的参考方向以及关联参考方向</h3>实际电压方向: 点位真正的降低的方向 单位:V<br><strong>Tips:电位参考点可以任意选择,参考点一经确定,电路中各点的电位值就唯一确定了,选择不同的电位参考点,其电位值会改变，但是两点之间的电位不变。</strong><br>1.电压(降)的参考方向—-假设高电位指向低电位的方向。<br><img src="https://tse4-mm.cn.bing.net/th/id/OIP-C.n916fvC6q4xB_OUTMNd1LwHaCc?rs=1&amp;pid=ImgDetMain 电压的参考方向" alt="电压的参考方向"><br>由此我们可以看到,当参考电压的方向与实际电压的方向相同时—- U &gt; 0<br>当参考电压的方向与实际电压的方向相反时—- U &lt; 0<br>2.关联参考方向 (对某一,二端电路而言，因此研究方向是选定一个研究对象)<br>元件或电路的u,i采用相同的参考方向称为关联参考方向(**Tips: 电流的参考方向与电压的参考方向一致时为关联参考方向，反之为非关联参考方向)</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;第一章&quot;&gt;&lt;a href=&quot;#第一章&quot; class=&quot;headerlink&quot; title=&quot;第一章:&quot;&gt;&lt;/a&gt;第一章:&lt;/h1&gt;&lt;p&gt;Tips:&lt;br&gt;&lt;strong&gt;在高中时期,我们都会把公式简单地写成乘/除法,但是在这个&amp;lt;&amp;lt;电路&amp;gt;&amp;gt;这</summary>
      
    
    
    
    
    <category term="Technology" scheme="https://madao-luv.github.io/tags/Technology/"/>
    
  </entry>
  
  <entry>
    <title>模电小知识</title>
    <link href="https://madao-luv.github.io/posts/75e8915.html"/>
    <id>https://madao-luv.github.io/posts/75e8915.html</id>
    <published>2024-05-17T16:16:03.456Z</published>
    <updated>2024-06-04T01:19:22.858Z</updated>
    
    
    
    
    
    <category term="Technology" scheme="https://madao-luv.github.io/tags/Technology/"/>
    
  </entry>
  
  <entry>
    <title>个人健身系统(后续会更新交互式)</title>
    <link href="https://madao-luv.github.io/posts/2266ffb9.html"/>
    <id>https://madao-luv.github.io/posts/2266ffb9.html</id>
    <published>2024-05-14T03:49:50.149Z</published>
    <updated>2024-06-04T01:19:22.873Z</updated>
    
    <content type="html"><![CDATA[<h1 id="总览—-主函数执行-pyhton版"><a href="#总览—-主函数执行-pyhton版" class="headerlink" title="总览—-主函数执行(pyhton版)"></a>总览—-主函数执行(pyhton版)</h1><h2 id="1-Main-函数的工作原理"><a href="#1-Main-函数的工作原理" class="headerlink" title="1.Main()函数的工作原理"></a>1.Main()函数的工作原理</h2><p><strong>因此，我们接下来开始分解模块来进行编程，以后会进行更新改进，不会再使用print式进行交互</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;实现主要的业务逻辑&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        print_menu()</span><br><span class="line">        choose = <span class="built_in">input</span>(<span class="string">&quot;请输入你需要的功能:&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> choose == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            add_User()</span><br><span class="line">        <span class="keyword">elif</span> choose == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">            append_YourMov(Users[-<span class="number">1</span>][<span class="string">&quot;level&quot;</span>])</span><br><span class="line">        <span class="keyword">elif</span> choose == <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">            Detele_Mov()</span><br><span class="line">        <span class="keyword">elif</span> choose == <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">            show_allBehavior()</span><br><span class="line">        <span class="keyword">elif</span> choose == <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line">            exit()</span><br><span class="line">        <span class="keyword">elif</span> choose == <span class="string">&#x27;6&#x27;</span>:</span><br><span class="line">            <span class="keyword">pass</span>  <span class="comment">#可以自己拓展</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#执行主函数代码,一run就开始调用该函数</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure></p><h2 id="2-为用户打印出总菜单"><a href="#2-为用户打印出总菜单" class="headerlink" title="2.为用户打印出总菜单"></a>2.为用户打印出总菜单</h2><p>这里是分别打印出选项,供给客户选择<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#打印出主菜单，供用户选择功能</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">print_menu</span>():</span><br><span class="line">    <span class="built_in">print</span>(date)  <span class="comment"># 这个是用来调用我在上面引用的api，如果报错请删掉这一行 用来显示时间</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;-----------------------&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;您的贴心撸铁友 v1.0&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;1:添加个人用户&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;2:添加动作&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;3:删除动作&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;4:显示锻炼日志&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;5:结束运行&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;-----------------------&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(sen)  <span class="comment">#显示名人名言</span></span><br></pre></td></tr></table></figure></p><h2 id="3-引入的库函数"><a href="#3-引入的库函数" class="headerlink" title="3.引入的库函数"></a>3.引入的库函数</h2><p><strong>我们在这里引入的库函数，它的作用是显示日期和每日好句(从open.iciba.com获取的api)</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">* @date---里面是今天的日期</span></span><br><span class="line"><span class="string">* @content ---每日一句</span></span><br><span class="line"><span class="string">* @sen---每日一句    content 和 sen 的语句是不同的,注意一下</span></span><br><span class="line"><span class="string">*</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line">date=datetime.today().strftime(<span class="string">&quot;%Y年%m月%d日&quot;</span>) <span class="comment">#生成日期</span></span><br><span class="line">url = <span class="string">&#x27;http://open.iciba.com/dsapi/&#x27;</span></span><br><span class="line">res = requests.get(url)</span><br><span class="line">content_e = res.json()[<span class="string">&#x27;content&#x27;</span>]</span><br><span class="line">content_c = res.json()[<span class="string">&#x27;note&#x27;</span>]</span><br><span class="line">content = content_e + content_c</span><br><span class="line"><span class="comment">#content_t = res.json()[&#x27;picture2&#x27;]</span></span><br><span class="line">url2=<span class="string">r&quot;http://dict.cn&quot;</span></span><br><span class="line">resp = requests.get(url2)</span><br><span class="line">soup = BeautifulSoup(resp.text,<span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">htm=soup.find(<span class="string">&quot;div&quot;</span>,class_=<span class="string">&quot;daily_sentence&quot;</span>)</span><br><span class="line">sen=htm.text.strip().split(<span class="string">&quot;\n\t&quot;</span>)[<span class="number">2</span>].strip()</span><br></pre></td></tr></table></figure></p><h1 id="1-添加用户功能"><a href="#1-添加用户功能" class="headerlink" title="1.添加用户功能"></a>1.添加用户功能</h1><h2 id="1-原来版本"><a href="#1-原来版本" class="headerlink" title="1.原来版本"></a>1.原来版本</h2><p><strong>原理:这里我们简单地使用print,if…else,for循环来实现添加用户功能，以及加上一个User数组用来存放用户字典类型</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">User = []</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add_User</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;哔哔哔---!正在加载中&quot;</span>)</span><br><span class="line">    <span class="keyword">global</span> Users  <span class="comment">#全局变量</span></span><br><span class="line">    name = <span class="built_in">input</span>(<span class="string">&quot;请输入用户姓名:&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> person <span class="keyword">in</span> Users:</span><br><span class="line">        <span class="keyword">if</span> person[<span class="string">&quot;name&quot;</span>] == name:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;该名称已被占用&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;在这几个输入前面插入for 循环遍历是为了防止名称重复，并且重名时可以提前结束</span></span><br><span class="line"><span class="string">    防止做无用功&quot;&quot;&quot;</span></span><br><span class="line">    age = <span class="built_in">input</span>(<span class="string">&quot;请输入用户年龄:&quot;</span>)</span><br><span class="line">    security = <span class="built_in">input</span>(<span class="string">&quot;请输入用户密码:&quot;</span>)</span><br><span class="line">    level = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入您现在的健身状态:(1.小白,2.大佬(请输入选项数字)):&quot;</span>))</span><br><span class="line">    user = &#123;</span><br><span class="line">        <span class="string">&quot;name&quot;</span>:name,</span><br><span class="line">        <span class="string">&quot;age&quot;</span>:age,</span><br><span class="line">        <span class="string">&quot;security&quot;</span>:security,</span><br><span class="line">        <span class="string">&quot;level&quot;</span>: level</span><br><span class="line">    &#125;</span><br><span class="line">    Users.append(user)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;添加用户信息成功&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(Users)</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h2 id="2-更新版本"><a href="#2-更新版本" class="headerlink" title="2.更新版本"></a>2.更新版本</h2><p><strong>……等待您的发掘…….</strong></p><h1 id="2-添加锻炼动作"><a href="#2-添加锻炼动作" class="headerlink" title="2.添加锻炼动作"></a>2.添加锻炼动作</h1><h2 id="1-原始版本"><a href="#1-原始版本" class="headerlink" title="1.原始版本"></a>1.原始版本</h2><p>原理:这个是你添加动作的地方,模板我写好了.<br>@level—-代表等级的意思,我在这里设置了1.小白,2.大佬这两个等级,你在用户登录的时候就已经要求设置好了<br>@choose2—-代表选择的动作,你可以看到那个函数 def append_YourMov(level): 这里面我已经设置好了choose2的范围1-6</p><h3 id="1-这是内部的实现"><a href="#1-这是内部的实现" class="headerlink" title="1.这是内部的实现"></a>1.这是内部的实现</h3><p><strong>里面空出来的部分是可以用来自由发挥的</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">Behavior = [] <span class="comment">#用来装入锻炼动作</span></span><br><span class="line"><span class="comment">#2的内部调用函数,用来选择动作</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Movement_menu</span>(<span class="params">levle,choose2</span>):</span><br><span class="line">    <span class="comment">#等级1是小白，等级二是大佬</span></span><br><span class="line">    <span class="keyword">global</span> Behavior <span class="comment">#全局数组</span></span><br><span class="line">    <span class="keyword">if</span> levle == <span class="number">1</span> <span class="keyword">and</span> choose2 == <span class="number">1</span>:</span><br><span class="line">        end = <span class="literal">True</span> <span class="comment">#为了是结束选择</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;---------------------&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;1.双杠臂屈伸&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;2.俯卧撑&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;3.哑铃飞鸟&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;4.退出&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;---------------------&quot;</span>)</span><br><span class="line">            choice = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;老铁你的选择是.....&quot;</span>)) <span class="comment">#这里输入选择，为下面持续选择做准备</span></span><br><span class="line">            <span class="keyword">if</span> choice == <span class="number">1</span>:</span><br><span class="line">                Mov = &#123;</span><br><span class="line">                    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;双杠臂屈伸&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">elif</span> choice == <span class="number">2</span>:</span><br><span class="line">                Mov = &#123;</span><br><span class="line">                    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;俯卧撑&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">elif</span> choice == <span class="number">3</span>:</span><br><span class="line">                Mov = &#123;</span><br><span class="line">                    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;哑铃飞鸟&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">elif</span> choice == <span class="number">4</span>:</span><br><span class="line">                end = <span class="literal">False</span> <span class="comment">#结束循环</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            Behavior.append(Mov)</span><br><span class="line">    <span class="keyword">elif</span> levle == <span class="number">2</span> <span class="keyword">and</span> choose2 == <span class="number">1</span>:</span><br><span class="line">        end = <span class="literal">True</span>  <span class="comment"># 为了是结束选择</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;---------------------&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;1.蝴蝶机夹胸&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;2.哑铃上斜卧推&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;3.器械上斜卧推胸&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;4.退出&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;---------------------&quot;</span>)</span><br><span class="line">            choice = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;老铁你的选择是.....&quot;</span>))  <span class="comment"># 这里输入选择，为下面持续选择做准备</span></span><br><span class="line">            <span class="keyword">if</span> choice == <span class="number">1</span>:</span><br><span class="line">                Mov = &#123;</span><br><span class="line">                    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;蝴蝶机夹胸&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">elif</span> choice == <span class="number">2</span>:</span><br><span class="line">                Mov = &#123;</span><br><span class="line">                    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;哑铃上斜卧推&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">elif</span> choice == <span class="number">3</span>:</span><br><span class="line">                Mov = &#123;</span><br><span class="line">                    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;器械上斜卧推胸&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">elif</span> choice == <span class="number">4</span>:</span><br><span class="line">                end = <span class="literal">False</span>  <span class="comment"># 结束循环</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            Behavior.append(Mov)</span><br></pre></td></tr></table></figure></p><h3 id="2-这是给客户看的添加动作菜单"><a href="#2-这是给客户看的添加动作菜单" class="headerlink" title="2.这是给客户看的添加动作菜单"></a>2.这是给客户看的添加动作菜单</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#2.添加所喜好的动作</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">append_YourMov</span>(<span class="params">level</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;----------------------&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;终于等到你,老铁&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;1.胸肌&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;2.肩部&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;3.腹肌&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;4.二头&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;5.背部&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;6.腿部&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;----------------------&quot;</span>)</span><br><span class="line">    choose2 = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入您的喜好:&quot;</span>))</span><br><span class="line">    <span class="keyword">if</span> choose2 == <span class="number">1</span>:</span><br><span class="line">        Movement_menu(level,<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">elif</span> choose2 == <span class="number">2</span>:</span><br><span class="line">        Movement_menu(level,<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">elif</span> choose2 == <span class="number">3</span>:</span><br><span class="line">        Movement_menu(level,<span class="number">3</span>)</span><br><span class="line">    <span class="keyword">elif</span> choose2 == <span class="number">4</span>:</span><br><span class="line">        Movement_menu(level,<span class="number">4</span>)</span><br><span class="line">    <span class="keyword">elif</span> choose2 == <span class="number">5</span>:</span><br><span class="line">        Movement_menu(level,<span class="number">5</span>)</span><br><span class="line">    <span class="keyword">elif</span> choose2 == <span class="number">6</span>:</span><br><span class="line">        Movement_menu(level,<span class="number">6</span>)</span><br></pre></td></tr></table></figure><h2 id="2-更新版本-1"><a href="#2-更新版本-1" class="headerlink" title="2.更新版本"></a>2.更新版本</h2><p><strong>……等待您的发掘…….</strong></p><h1 id="3-删除动作"><a href="#3-删除动作" class="headerlink" title="3.删除动作"></a>3.删除动作</h1><h2 id="1-原始版本-1"><a href="#1-原始版本-1" class="headerlink" title="1.原始版本"></a>1.原始版本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#3.删除你想要去掉的运动动作</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Detele_Mov</span>():</span><br><span class="line">    <span class="keyword">global</span> Behavior <span class="comment">#里面加有动作</span></span><br><span class="line">    i = <span class="number">1</span> <span class="comment">#定义这为对应的选择</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;------------------------&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> demo <span class="keyword">in</span> Behavior:</span><br><span class="line">        <span class="built_in">print</span>(i,<span class="string">&quot;---&quot;</span>,demo,end = <span class="string">&quot; &quot;</span>)</span><br><span class="line">        i += <span class="number">1</span> <span class="comment">#需要自增</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;退出选择请在下方输入:4&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;------------------------&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        choose3 = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入您想要删除的动作:&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> choose3 == <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="comment">#结束函数</span></span><br><span class="line">        Behavior.pop(choose3-<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h2 id="2-更新版本-2"><a href="#2-更新版本-2" class="headerlink" title="2.更新版本"></a>2.更新版本</h2><p><strong>等待你的发掘…..</strong></p><h1 id="4-显示锻炼日志"><a href="#4-显示锻炼日志" class="headerlink" title="4.显示锻炼日志"></a>4.显示锻炼日志</h1><h2 id="1-原始版本-2"><a href="#1-原始版本-2" class="headerlink" title="1.原始版本"></a>1.原始版本</h2><p><strong>该函数作用是显示锻炼日志</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#4.该函数作用是显示锻炼日志</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show_allBehavior</span>():</span><br><span class="line">    <span class="built_in">print</span>(date) <span class="comment">#这个是用来调用我在上面引用的api，如果报错请删掉这一行</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;正在加载您的绝美训练动作....&quot;</span>)</span><br><span class="line">    nums = <span class="built_in">len</span>(Behavior)   <span class="comment">#统计动作数量</span></span><br><span class="line">    <span class="keyword">if</span> nums == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;快去添加你喜好的动作吧！&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>()</span><br><span class="line">        <span class="keyword">return</span> <span class="comment">#没有动作添加，所以直接退出该函数</span></span><br><span class="line">    <span class="keyword">for</span> Mov <span class="keyword">in</span> Behavior:</span><br><span class="line">        <span class="built_in">print</span>(Mov)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line">    <span class="comment">#这里的Behavior是那个动作集里的</span></span><br><span class="line">    <span class="built_in">print</span>(content) <span class="comment">#这个是用来调用我在上面引用的api，如果报错请删掉这一行</span></span><br></pre></td></tr></table></figure></p><h2 id="2-更新版本-3"><a href="#2-更新版本-3" class="headerlink" title="2.更新版本"></a>2.更新版本</h2><p><strong>等待你的发掘…..</strong></p><h1 id="5-代码的总结构"><a href="#5-代码的总结构" class="headerlink" title="5.代码的总结构"></a>5.代码的总结构</h1><h2 id="1-原始版本-3"><a href="#1-原始版本-3" class="headerlink" title="1.原始版本"></a>1.原始版本</h2><p>提醒一句<strong>功能5.其实在main()函数调用的menu函数里实现了,就是直接使用内置函数exit()—-结束运程</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line">date=datetime.today().strftime(<span class="string">&quot;%Y年%m月%d日&quot;</span>) <span class="comment">#生成日期</span></span><br><span class="line">url = <span class="string">&#x27;http://open.iciba.com/dsapi/&#x27;</span></span><br><span class="line">res = requests.get(url)</span><br><span class="line">content_e = res.json()[<span class="string">&#x27;content&#x27;</span>]</span><br><span class="line">content_c = res.json()[<span class="string">&#x27;note&#x27;</span>]</span><br><span class="line">content = content_e + content_c</span><br><span class="line"><span class="comment">#content_t = res.json()[&#x27;picture2&#x27;]</span></span><br><span class="line">url2=<span class="string">r&quot;http://dict.cn&quot;</span></span><br><span class="line">resp = requests.get(url2)</span><br><span class="line">soup = BeautifulSoup(resp.text,<span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">htm=soup.find(<span class="string">&quot;div&quot;</span>,class_=<span class="string">&quot;daily_sentence&quot;</span>)</span><br><span class="line">sen=htm.text.strip().split(<span class="string">&quot;\n\t&quot;</span>)[<span class="number">2</span>].strip()</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">******************************</span></span><br><span class="line"><span class="string">* @date---里面是今天的日期</span></span><br><span class="line"><span class="string">* @content ---每日一句</span></span><br><span class="line"><span class="string">* @sen---每日一句    content 和 sen 的语句是不同的,注意一下</span></span><br><span class="line"><span class="string">*</span></span><br><span class="line"><span class="string">* 上面是我用来调用api的，不要动，如果运行不了就删除</span></span><br><span class="line"><span class="string">*</span></span><br><span class="line"><span class="string">*******************************</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">Users = []  <span class="comment">#用户</span></span><br><span class="line">Behavior = []  <span class="comment">#锻炼动作</span></span><br><span class="line"><span class="comment">#打印出主菜单，供用户选择功能</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">print_menu</span>():</span><br><span class="line">    <span class="built_in">print</span>(date)  <span class="comment"># 这个是用来调用我在上面引用的api，如果报错请删掉这一行 用来显示时间</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;-----------------------&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;您的贴心撸铁友 v1.0&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;1:添加个人用户&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;2:添加动作&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;3:删除动作&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;4:显示锻炼日志&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;5:结束运行&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;-----------------------&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(sen)  <span class="comment">#显示名人名言</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#1.添加用户</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add_User</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;哔哔哔---!正在加载中&quot;</span>)</span><br><span class="line">    <span class="keyword">global</span> Users  <span class="comment">#全局变量</span></span><br><span class="line">    name = <span class="built_in">input</span>(<span class="string">&quot;请输入用户姓名:&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> person <span class="keyword">in</span> Users:</span><br><span class="line">        <span class="keyword">if</span> person[<span class="string">&quot;name&quot;</span>] == name:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;该名称已被占用&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;在这几个输入前面插入for 循环遍历是为了防止名称重复，并且重名时可以提前结束</span></span><br><span class="line"><span class="string">    防止做无用功&quot;&quot;&quot;</span></span><br><span class="line">    age = <span class="built_in">input</span>(<span class="string">&quot;请输入用户年龄:&quot;</span>)</span><br><span class="line">    security = <span class="built_in">input</span>(<span class="string">&quot;请输入用户密码:&quot;</span>)</span><br><span class="line">    level = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入您现在的健身状态:(1.小白,2.大佬(请输入选项数字)):&quot;</span>))</span><br><span class="line">    user = &#123;</span><br><span class="line">        <span class="string">&quot;name&quot;</span>:name,</span><br><span class="line">        <span class="string">&quot;age&quot;</span>:age,</span><br><span class="line">        <span class="string">&quot;security&quot;</span>:security,</span><br><span class="line">        <span class="string">&quot;level&quot;</span>: level</span><br><span class="line">    &#125;</span><br><span class="line">    Users.append(user)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;添加用户信息成功&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(Users)</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">这个是你添加动作的地方,模板我写好了</span></span><br><span class="line"><span class="string">@level---代表等级的意思,我在这里设置了1.小白,2.大佬这两个等级,你在用户登录的时候就已经要求设置好了</span></span><br><span class="line"><span class="string">@choose2---代表选择的动作,你可以看到那个函数 def append_YourMov(level): 这里面我已经设置好了choose2的范围1-6</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment">#2的内部调用函数,用来选择动作</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Movement_menu</span>(<span class="params">levle,choose2</span>):</span><br><span class="line">    <span class="comment">#等级1是小白，等级二是大佬</span></span><br><span class="line">    <span class="keyword">global</span> Behavior <span class="comment">#全局数组</span></span><br><span class="line">    <span class="keyword">if</span> levle == <span class="number">1</span> <span class="keyword">and</span> choose2 == <span class="number">1</span>:</span><br><span class="line">        end = <span class="literal">True</span> <span class="comment">#为了是结束选择</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;---------------------&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;1.双杠臂屈伸&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;2.俯卧撑&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;3.哑铃飞鸟&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;4.退出&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;---------------------&quot;</span>)</span><br><span class="line">            choice = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;老铁你的选择是.....&quot;</span>)) <span class="comment">#这里输入选择，为下面持续选择做准备</span></span><br><span class="line">            <span class="keyword">if</span> choice == <span class="number">1</span>:</span><br><span class="line">                Mov = &#123;</span><br><span class="line">                    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;双杠臂屈伸&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">elif</span> choice == <span class="number">2</span>:</span><br><span class="line">                Mov = &#123;</span><br><span class="line">                    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;俯卧撑&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">elif</span> choice == <span class="number">3</span>:</span><br><span class="line">                Mov = &#123;</span><br><span class="line">                    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;哑铃飞鸟&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">elif</span> choice == <span class="number">4</span>:</span><br><span class="line">                end = <span class="literal">False</span> <span class="comment">#结束循环</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            Behavior.append(Mov)</span><br><span class="line">    <span class="keyword">elif</span> levle == <span class="number">2</span> <span class="keyword">and</span> choose2 == <span class="number">1</span>:</span><br><span class="line">        end = <span class="literal">True</span>  <span class="comment"># 为了是结束选择</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;---------------------&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;1.蝴蝶机夹胸&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;2.哑铃上斜卧推&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;3.器械上斜卧推胸&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;4.退出&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;---------------------&quot;</span>)</span><br><span class="line">            choice = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;老铁你的选择是.....&quot;</span>))  <span class="comment"># 这里输入选择，为下面持续选择做准备</span></span><br><span class="line">            <span class="keyword">if</span> choice == <span class="number">1</span>:</span><br><span class="line">                Mov = &#123;</span><br><span class="line">                    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;蝴蝶机夹胸&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">elif</span> choice == <span class="number">2</span>:</span><br><span class="line">                Mov = &#123;</span><br><span class="line">                    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;哑铃上斜卧推&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">elif</span> choice == <span class="number">3</span>:</span><br><span class="line">                Mov = &#123;</span><br><span class="line">                    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;器械上斜卧推胸&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">elif</span> choice == <span class="number">4</span>:</span><br><span class="line">                end = <span class="literal">False</span>  <span class="comment"># 结束循环</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            Behavior.append(Mov)</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.添加所喜好的动作</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">append_YourMov</span>(<span class="params">level</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;----------------------&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;终于等到你,老铁&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;1.胸肌&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;2.肩部&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;3.腹肌&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;4.二头&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;5.背部&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;6.腿部&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;----------------------&quot;</span>)</span><br><span class="line">    choose2 = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入您的喜好:&quot;</span>))</span><br><span class="line">    <span class="keyword">if</span> choose2 == <span class="number">1</span>:</span><br><span class="line">        Movement_menu(level,<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">elif</span> choose2 == <span class="number">2</span>:</span><br><span class="line">        Movement_menu(level,<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">elif</span> choose2 == <span class="number">3</span>:</span><br><span class="line">        Movement_menu(level,<span class="number">3</span>)</span><br><span class="line">    <span class="keyword">elif</span> choose2 == <span class="number">4</span>:</span><br><span class="line">        Movement_menu(level,<span class="number">4</span>)</span><br><span class="line">    <span class="keyword">elif</span> choose2 == <span class="number">5</span>:</span><br><span class="line">        Movement_menu(level,<span class="number">5</span>)</span><br><span class="line">    <span class="keyword">elif</span> choose2 == <span class="number">6</span>:</span><br><span class="line">        Movement_menu(level,<span class="number">6</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.删除你想要去掉的运动动作</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Detele_Mov</span>():</span><br><span class="line">    <span class="keyword">global</span> Behavior <span class="comment">#里面加有动作</span></span><br><span class="line">    i = <span class="number">1</span> <span class="comment">#定义这为对应的选择</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;------------------------&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> demo <span class="keyword">in</span> Behavior:</span><br><span class="line">        <span class="built_in">print</span>(i,<span class="string">&quot;---&quot;</span>,demo,end = <span class="string">&quot; &quot;</span>)</span><br><span class="line">        i += <span class="number">1</span> <span class="comment">#需要自增</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;退出选择请在下方输入:4&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;------------------------&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        choose3 = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入您想要删除的动作:&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> choose3 == <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="comment">#结束函数</span></span><br><span class="line">        Behavior.pop(choose3-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#4.该函数作用是显示锻炼日志</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show_allBehavior</span>():</span><br><span class="line">    <span class="built_in">print</span>(date) <span class="comment">#这个是用来调用我在上面引用的api，如果报错请删掉这一行</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;正在加载您的绝美训练动作....&quot;</span>)</span><br><span class="line">    nums = <span class="built_in">len</span>(Behavior)   <span class="comment">#统计动作数量</span></span><br><span class="line">    <span class="keyword">if</span> nums == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;快去添加你喜好的动作吧！&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>()</span><br><span class="line">        <span class="keyword">return</span> <span class="comment">#没有动作添加，所以直接退出该函数</span></span><br><span class="line">    <span class="keyword">for</span> Mov <span class="keyword">in</span> Behavior:</span><br><span class="line">        <span class="built_in">print</span>(Mov)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line">    <span class="comment">#这里的Behavior是那个动作集里的</span></span><br><span class="line">    <span class="built_in">print</span>(content) <span class="comment">#这个是用来调用我在上面引用的api，如果报错请删掉这一行</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;实现主要的业务逻辑&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        print_menu()</span><br><span class="line">        choose = <span class="built_in">input</span>(<span class="string">&quot;请输入你需要的功能:&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> choose == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            add_User()</span><br><span class="line">        <span class="keyword">elif</span> choose == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">            append_YourMov(Users[-<span class="number">1</span>][<span class="string">&quot;level&quot;</span>])</span><br><span class="line">        <span class="keyword">elif</span> choose == <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">            Detele_Mov()</span><br><span class="line">        <span class="keyword">elif</span> choose == <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">            show_allBehavior()</span><br><span class="line">        <span class="keyword">elif</span> choose == <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line">            exit()</span><br><span class="line">        <span class="keyword">elif</span> choose == <span class="string">&#x27;6&#x27;</span>:</span><br><span class="line">            <span class="keyword">pass</span>  <span class="comment">#可以自己拓展</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#执行主函数代码,一run就开始调用该函数</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure></p><h2 id="2-更新版本-4"><a href="#2-更新版本-4" class="headerlink" title="2.更新版本"></a>2.更新版本</h2><p><strong>等待你的发掘…..</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;总览—-主函数执行-pyhton版&quot;&gt;&lt;a href=&quot;#总览—-主函数执行-pyhton版&quot; class=&quot;headerlink&quot; title=&quot;总览—-主函数执行(pyhton版)&quot;&gt;&lt;/a&gt;总览—-主函数执行(pyhton版)&lt;/h1&gt;&lt;h2 id=&quot;1-M</summary>
      
    
    
    
    
    <category term="Technology" scheme="https://madao-luv.github.io/tags/Technology/"/>
    
  </entry>
  
  <entry>
    <title>蓝牙小车开发时的一些细节</title>
    <link href="https://madao-luv.github.io/posts/842d5faf.html"/>
    <id>https://madao-luv.github.io/posts/842d5faf.html</id>
    <published>2024-05-07T15:51:28.421Z</published>
    <updated>2024-06-14T12:09:45.784Z</updated>
    
    <content type="html"><![CDATA[<h1 id="小车基本运动之最重要的—-PWM"><a href="#小车基本运动之最重要的—-PWM" class="headerlink" title="小车基本运动之最重要的—-PWM"></a>小车基本运动之最重要的—-PWM</h1><h2 id="1-PWM（Pulse-Width-Modulation）脉冲宽度调制是什么"><a href="#1-PWM（Pulse-Width-Modulation）脉冲宽度调制是什么" class="headerlink" title="1.PWM（Pulse Width Modulation）脉冲宽度调制是什么?"></a>1.PWM（Pulse Width Modulation）脉冲宽度调制是什么?</h2><p>为何这个<strong>PWM（脉冲宽度）</strong>如此重要呢？因为在具有惯性的系统中，我们可以通过对一系列脉冲的宽度进行调制，来等效地获得我们所需要的模拟量，经常用于<strong>电机控速</strong>等领域（属于是常客了）<br>举一个例子:比如说我的占空比为50%,那么在这个一个PWM的周期内，电机处于高电平的时间是只有周期的一半，低电平默认为0，那么我们计算等效电压—-( T(on) <em> 5v + T(off) </em> 0v ) / Ts = 等效电压V 所以50%占空比可以等效为2.5v电压<br>通过这个等效电压的例子，也为我们如何控制电机的速度以及呼吸灯等等一系列工业生产提供了新的思路—-<strong>通过PWM（即控制占空比）来控制等效电压—-从而GPIO配置为复用推挽输出，定时器的四个通道（STM32外设）来控制引脚输出</strong>  </p><h2 id="2-如何实现PWM？"><a href="#2-如何实现PWM？" class="headerlink" title="2.如何实现PWM？"></a>2.如何实现PWM？</h2><p>实现PWM，我们需要用到定时器和OC（输出比较），通过定时器不断计数然后和RCC（参考比较值）不断比较，<strong>当计数小于RCC时，输出的电平为高电平，而当计数大于RCC时，输出的电平为低电平</strong>—-这个过程叫输出比较—-然后统计高电平在总的计数期间的比值—-占空比。<br><img src="https://tse4-mm.cn.bing.net/th/id/OIP-C.OCF9MV3uCHwJi5rG-ovLhAHaEY?rs=1&amp;pid=ImgDetMain" alt="PWM基本结构" title="江科大PWM的基本结构图"><br>请看此图<br>我们三步走战略,1.初始化时基单元，2.GPIO串口复用AFIO初始化  3.定时器初始化。 以及知道参数计算的公式:1. PWMFreq = CK_PSC / (PSC+1) / (ARR+1)<br>2.PWM占空比Duty = CCR / (ARR + 1)<br>3.PWM分辨率Reso = 1 / (ARR + 1) </p><h2 id="3-PWM代码实现"><a href="#3-PWM代码实现" class="headerlink" title="3.PWM代码实现"></a>3.PWM代码实现</h2><p>放在<strong>*\Hardware中</strong>那么请看具体代码<br>这是PWM.h的具体代码<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __PWM_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __PWM_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure></p><p>这是PWM.c的具体代码<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//1.时基单元</span></span><br><span class="line"><span class="comment">//2.oc输出比较</span></span><br><span class="line"><span class="comment">//3.GPIO初始化</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4,ENABLE);   <span class="comment">//开启TIM4的外部时钟</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB,ENABLE);<span class="comment">//PB6-PB9 开启GPIOB的外部时钟</span></span><br><span class="line"></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStruct;</span><br><span class="line">GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF_PP;  <span class="comment">//配置为复用推挽输出，定时器的四个通道来控制引脚输出</span></span><br><span class="line">GPIO_InitStruct.GPIO_Pin = GPIO_Pin_6 | GPIO_Pin_7 | GPIO_Pin_8 | GPIO_Pin_9;</span><br><span class="line">GPIO_InitStruct.GPIO_Speed =  GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOB,&amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义时基单元</span></span><br><span class="line">TIM_TimeBaseInitTypeDefTIM_TimeBaseInitStruct;</span><br><span class="line">TIM_TimeBaseInitStruct.TIM_CounterMode = TIM_CounterMode_Up; <span class="comment">//从0开始向上计数</span></span><br><span class="line">TIM_TimeBaseInitStruct.TIM_Period = <span class="number">100</span> - <span class="number">1</span>; <span class="comment">//ARR重装值</span></span><br><span class="line">TIM_TimeBaseInitStruct.TIM_Prescaler = <span class="number">36</span> - <span class="number">1</span>; <span class="comment">//PSC</span></span><br><span class="line">TIM_TimeBaseInitStruct.TIM_RepetitionCounter = <span class="number">0</span>; <span class="comment">//高级定时器才有的，我们用不到这里</span></span><br><span class="line">TIM_TimeBaseInitStruct.TIM_ClockDivision = TIM_CKD_DIV1;  <span class="comment">//预分频 DIV1是0预分频</span></span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInit(TIM4,&amp;TIM_TimeBaseInitStruct);</span><br><span class="line"></span><br><span class="line"><span class="comment">// OC 输出比较  初始化OC比较的属性</span></span><br><span class="line">TIM_OCInitTypeDef TIM_OCInitStruct;</span><br><span class="line"></span><br><span class="line"><span class="comment">//OC1 输出比较通道口1</span></span><br><span class="line">TIM_OCInitStruct.TIM_OCMode = TIM_OCMode_PWM1;</span><br><span class="line">TIM_OCInitStruct.TIM_OCPolarity = TIM_OCPolarity_High; <span class="comment">//以高电平为有效电平</span></span><br><span class="line">TIM_OCInitStruct.TIM_OutputState = TIM_OutputState_Enable;</span><br><span class="line">TIM_OCInitStruct.TIM_Pulse = <span class="number">0</span>; <span class="comment">//CCR 预期值 CNT 与 CCR进行比较</span></span><br><span class="line">TIM_OC1Init(TIM4,&amp;TIM_OCInitStruct);</span><br><span class="line"></span><br><span class="line"><span class="comment">//oc2</span></span><br><span class="line">TIM_OCInitStruct.TIM_OCMode = TIM_OCMode_PWM1;</span><br><span class="line">TIM_OCInitStruct.TIM_OCPolarity = TIM_OCPolarity_High; <span class="comment">//以高电平为有效电平</span></span><br><span class="line">TIM_OCInitStruct.TIM_OutputState = TIM_OutputState_Enable;</span><br><span class="line">TIM_OCInitStruct.TIM_Pulse = <span class="number">0</span>; <span class="comment">//CCR 预期值 CNT 与 CCR进行比较</span></span><br><span class="line">TIM_OC2Init(TIM4,&amp;TIM_OCInitStruct);</span><br><span class="line"></span><br><span class="line"><span class="comment">//oc3</span></span><br><span class="line">TIM_OCInitStruct.TIM_OCMode = TIM_OCMode_PWM1;</span><br><span class="line">TIM_OCInitStruct.TIM_OCPolarity = TIM_OCPolarity_High; <span class="comment">//以高电平为有效电平</span></span><br><span class="line">TIM_OCInitStruct.TIM_OutputState = TIM_OutputState_Enable;</span><br><span class="line">TIM_OCInitStruct.TIM_Pulse = <span class="number">0</span>; <span class="comment">//CCR 预期值 CNT 与 CCR进行比较</span></span><br><span class="line">TIM_OC3Init(TIM4,&amp;TIM_OCInitStruct);</span><br><span class="line"></span><br><span class="line"><span class="comment">//oc4</span></span><br><span class="line">TIM_OCInitStruct.TIM_OCMode = TIM_OCMode_PWM1;</span><br><span class="line">TIM_OCInitStruct.TIM_OCPolarity = TIM_OCPolarity_High; <span class="comment">//以高电平为有效电平</span></span><br><span class="line">TIM_OCInitStruct.TIM_OutputState = TIM_OutputState_Enable;</span><br><span class="line">TIM_OCInitStruct.TIM_Pulse = <span class="number">0</span>; <span class="comment">//CCR 预期值 CNT 与 CCR进行比较</span></span><br><span class="line">TIM_OC4Init(TIM4,&amp;TIM_OCInitStruct);</span><br><span class="line"></span><br><span class="line"><span class="comment">//在需要不断切换定时器的周期时，而且周期都比较短，  T = 1 / F</span></span><br><span class="line"><span class="comment">//程序员需要通过预加载寄存器配合自动重装载寄存器，来操作定时器 缓存</span></span><br><span class="line">TIM_OC1PreloadConfig(TIM4,TIM_OCPreload_Enable);</span><br><span class="line">TIM_OC2PreloadConfig(TIM4,TIM_OCPreload_Enable);</span><br><span class="line">TIM_OC3PreloadConfig(TIM4,TIM_OCPreload_Enable);</span><br><span class="line">TIM_OC4PreloadConfig(TIM4,TIM_OCPreload_Enable);</span><br><span class="line">TIM_ARRPreloadConfig(TIM4, ENABLE);</span><br><span class="line"></span><br><span class="line">TIM_Cmd(TIM4,ENABLE);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="4-Motor的代码实现以及IN比值设置参考图"><a href="#4-Motor的代码实现以及IN比值设置参考图" class="headerlink" title="4.Motor的代码实现以及IN比值设置参考图"></a>4.Motor的代码实现以及IN比值设置参考图</h2><p>在我们完成了PWM的初始化也就同时完成了OC里的RCC的定义，我们通过改变RCC的值来不断改变小车的基本运动速度。<br><img src="https://ts1.cn.mm.bing.net/th/id/R-C.c540134ba84fff722dafb314fa1c498f?rik=MTqhb01kKO7W5Q&amp;riu=http%3a%2f%2fc.51hei.com%2fa%2fa%2ff%2f641716481932543.jpg&amp;ehk=LpqhaWqf3ZJx8Qk4rBqoyGHGjtr74xI6qAZcOsMW4s8%3d&amp;risl=&amp;pid=ImgRaw&amp;r=0&amp;sres=1&amp;sresct=1" alt="输入输出模式控制图" title="输入输出对模式的控制图"><br>根据这张图，我们来设置小车的移动和速度。<br>我们分别将它们命名为Motor.c,Motor.h并放到\Hardware文件中<br>此为Motor.h<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __MOTOR_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __MOTOR_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Motor_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Motor_SetSpeed</span><span class="params">(<span class="type">uint8_t</span> left_1,<span class="type">uint8_t</span> left_2,<span class="type">uint8_t</span> right_1,<span class="type">uint8_t</span> right_2)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Motor_Run</span><span class="params">(<span class="type">uint8_t</span> Speed,<span class="type">uint16_t</span> time)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Motor_Back</span><span class="params">(<span class="type">uint8_t</span> Speed,<span class="type">uint16_t</span> time)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Motor_TurnLeft</span><span class="params">(<span class="type">uint8_t</span> Speed,<span class="type">uint16_t</span> time)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Motor_Spin_Left</span><span class="params">(<span class="type">uint8_t</span> Speed,<span class="type">uint16_t</span> time)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Motor_TurnRight</span><span class="params">(<span class="type">uint8_t</span> Speed,<span class="type">uint16_t</span> time)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Motor_Spin_Right</span><span class="params">(<span class="type">uint8_t</span> Speed,<span class="type">uint16_t</span> time)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Motor_Brake</span><span class="params">(<span class="type">uint16_t</span> time)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">````  </span><br><span class="line">此为Motor.c</span><br><span class="line">````c</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;PWM.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Delay.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//机器人初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Motor_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">PWM_Init();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//控制小车轮子的速度,分别设置四个通道的RCC，每两个通道,控制一个轮子</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Motor_SetSpeed</span><span class="params">(<span class="type">uint8_t</span> left_1,<span class="type">uint8_t</span> left_2,<span class="type">uint8_t</span> right_1,<span class="type">uint8_t</span> right_2)</span></span><br><span class="line">&#123;</span><br><span class="line">TIM_SetCompare1(TIM4,left_1);   <span class="comment">//TIM_SetCompare是为了改变我们设置在时基单元里的RCC的大小</span></span><br><span class="line">TIM_SetCompare2(TIM4,left_2);</span><br><span class="line">TIM_SetCompare3(TIM4,right_1);</span><br><span class="line">TIM_SetCompare4(TIM4,right_2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//车子向前开动</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Motor_Run</span><span class="params">(<span class="type">uint8_t</span> Speed,<span class="type">uint16_t</span> time)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (Speed &gt; <span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line">Speed = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (Speed &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Speed = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">Motor_SetSpeed(Speed,<span class="number">0</span>,Speed,<span class="number">0</span>); <span class="comment">//可以从输出比较的图看出来</span></span><br><span class="line">Delay_ms(time);</span><br><span class="line">Motor_SetSpeed(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>); <span class="comment">//最后车子停止运动</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//车子后退</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Motor_Back</span><span class="params">(<span class="type">uint8_t</span> Speed,<span class="type">uint16_t</span> time)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (Speed &gt; <span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line">Speed = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (Speed &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Speed = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">Motor_SetSpeed(<span class="number">0</span>,Speed,<span class="number">0</span>,Speed); <span class="comment">//可以从输出比较的图看出来</span></span><br><span class="line">Delay_ms(time);</span><br><span class="line">Motor_SetSpeed(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>); <span class="comment">//最后车子停止运动</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//车子左转</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Motor_TurnLeft</span><span class="params">(<span class="type">uint8_t</span> Speed,<span class="type">uint16_t</span> time)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (Speed &gt; <span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line">Speed = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (Speed &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Speed = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">Motor_SetSpeed(<span class="number">0</span>,<span class="number">0</span>,Speed,<span class="number">0</span>); <span class="comment">//可以从输出比较的图看出来</span></span><br><span class="line">Delay_ms(time);</span><br><span class="line">Motor_SetSpeed(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>); <span class="comment">//最后车子停止运动</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//小车左旋转</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Motor_Spin_Left</span><span class="params">(<span class="type">uint8_t</span> Speed,<span class="type">uint16_t</span> time)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (Speed &gt; <span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line">Speed = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (Speed &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Speed = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">Motor_SetSpeed(<span class="number">0</span>,Speed,Speed,<span class="number">0</span>); <span class="comment">//可以从输出比较的图看出来</span></span><br><span class="line">Delay_ms(time);</span><br><span class="line">Motor_SetSpeed(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>); <span class="comment">//最后车子停止运动</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//车子右转</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Motor_TurnRight</span><span class="params">(<span class="type">uint8_t</span> Speed,<span class="type">uint16_t</span> time)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (Speed &gt; <span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line">Speed = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (Speed &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Speed = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">Motor_SetSpeed(Speed,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>); <span class="comment">//可以从输出比较的图看出来</span></span><br><span class="line">Delay_ms(time);</span><br><span class="line">Motor_SetSpeed(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>); <span class="comment">//最后车子停止运动</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//小车右旋转</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Motor_Spin_Right</span><span class="params">(<span class="type">uint8_t</span> Speed,<span class="type">uint16_t</span> time)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (Speed &gt; <span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line">Speed = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (Speed &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Speed = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">Motor_SetSpeed(Speed,<span class="number">0</span>,<span class="number">0</span>,Speed); <span class="comment">//可以从输出比较的图看出来</span></span><br><span class="line">Delay_ms(time);</span><br><span class="line">Motor_SetSpeed(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>); <span class="comment">//最后车子停止运动</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//小车刹车</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Motor_Brake</span><span class="params">(<span class="type">uint16_t</span> time)</span></span><br><span class="line">&#123;</span><br><span class="line">Motor_SetSpeed(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">Delay_ms(time);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h1 id="小车的蓝牙模块—-Serial-串口"><a href="#小车的蓝牙模块—-Serial-串口" class="headerlink" title="小车的蓝牙模块—-Serial(串口)"></a>小车的蓝牙模块—-Serial(串口)</h1><p>1.通信的目的:将一个设备的数据传送到另一个设备，扩展硬件系统<br>2.通信协议：制定通信的规则，通信双方按照协议规则进行数据收发</p><h2 id="串口的性质"><a href="#串口的性质" class="headerlink" title="串口的性质"></a>串口的性质</h2><p>USART:<br>1.引脚—-TX和RX 2.双工—-全双工(发送双方可以同时收发数据) 3.时钟:异步 4.电平:单端 5.设备:点对点—-就是说只能双方进行通信</p><h2 id="串口通信原理图"><a href="#串口通信原理图" class="headerlink" title="串口通信原理图"></a>串口通信原理图</h2><p><img src="https://ts1.cn.mm.bing.net/th/id/R-C.5d15c4f4a252ae0bd12a220c39097671?rik=wO7qF1FO%2fpSNJw&amp;riu=http%3a%2f%2fimg.xjishu.com%2fimg%2fzl%2f2020%2f8%2f11%2fomv6m3zrm.gif&amp;ehk=ml9EvQow38iIHtwWiWKa78LUvhDIi7r3qTliUrsT4QQ%3d&amp;risl=&amp;pid=ImgRaw&amp;r=0" alt="串口原理" title="串口原理"><br>串口接线是交叉的，<strong>蓝牙串口不是独立供电的</strong>,所以我们是要将蓝牙模块与stm32连接，以stm32供电给蓝牙。</p><h2 id="USART-串口-性质"><a href="#USART-串口-性质" class="headerlink" title="USART(串口)性质"></a>USART(串口)性质</h2><p>1.USART,(Universal Synchronous/Asynchronous Receiver/Transmitte)通用同步/异步收发器<br>2.USART是STM32内部集成的硬件外设，可根据数据寄存器的一个字节数据自动生成数据帧时序，从TX引脚发送出去，也可以自动接收RX引脚的数据帧时序，拼接为一个字节数据，存放在数据寄存器里<br>3.自带波特率发生器，最高达4.5Mbits/s<br>4.可配置数据为长度(8/9),停止位长度(0.5/1/1.5/2)<br>5.可选校验位(无校验/奇校验/偶校验)<br>6.支持同步模式，硬件流控制，DMA，智能卡，IrDA,LIN<br>7.<strong>STM32F103C8T6 USART资源:USART1,USART2,USART3</strong> 在这里，商家给我指定了串口资源—-USART3,所以后面的代码篇用到的都为USART3</p><h2 id="Serial代码篇-Hardware"><a href="#Serial代码篇-Hardware" class="headerlink" title="Serial代码篇(\Hardware)"></a>Serial代码篇(\Hardware)</h2><p>1.Serial.h<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __SERIAL_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __SERIAL_H__</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//接收数据的结构体</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">uint8_t</span> Data[<span class="number">100</span>];   <span class="comment">//这个是用来接收文本数据的</span></span><br><span class="line"><span class="type">uint8_t</span> flag;    <span class="comment">//这个是后面main里面判断要用到的</span></span><br><span class="line"><span class="type">uint8_t</span> Length;   <span class="comment">//接收到的文本数据的大小</span></span><br><span class="line"></span><br><span class="line">&#125;MyUsart;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> MyUsart MYUSART3;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Serial_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><br>2.Serial.c<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Serial.h&quot;</span>    <span class="comment">//在.h文件里面定义的结构体，你需要在这个文件里面引用</span></span></span><br><span class="line">MyUsart MYUSART3;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1.GPIO的配置</span></span><br><span class="line"><span class="comment">//2.USART的配置</span></span><br><span class="line"><span class="comment">//3.NVIC的配置  接收文本</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Serial_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART3,ENABLE);   <span class="comment">//USART3</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB,ENABLE);</span><br><span class="line"><span class="comment">//GPIO配置</span></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStruct;</span><br><span class="line">GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF_PP;   <span class="comment">//复用推挽输出 </span></span><br><span class="line">GPIO_InitStruct.GPIO_Pin = GPIO_Pin_10;</span><br><span class="line">GPIO_InitStruct.GPIO_Speed =  GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOB,&amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line">GPIO_InitStruct.GPIO_Mode = GPIO_Mode_IN_FLOATING;</span><br><span class="line">GPIO_InitStruct.GPIO_Pin = GPIO_Pin_11;</span><br><span class="line">GPIO_InitStruct.GPIO_Speed =  GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOB,&amp;GPIO_InitStruct);</span><br><span class="line"></span><br><span class="line"><span class="comment">//NIVC中断配置</span></span><br><span class="line">NVIC_InitTypeDef NVIC_InitStruct;   <span class="comment">//谁来触发中断</span></span><br><span class="line">NVIC_InitStruct.NVIC_IRQChannel = USART3_IRQn;</span><br><span class="line">NVIC_InitStruct.NVIC_IRQChannelCmd = ENABLE;</span><br><span class="line">NVIC_InitStruct.NVIC_IRQChannelPreemptionPriority = <span class="number">2</span>;</span><br><span class="line">NVIC_InitStruct.NVIC_IRQChannelSubPriority = <span class="number">2</span>;</span><br><span class="line">NVIC_Init(&amp;NVIC_InitStruct);</span><br><span class="line"></span><br><span class="line">USART_ITConfig(USART3,USART_IT_RXNE,ENABLE);    <span class="comment">//配置USART中断如何触发 接收中断</span></span><br><span class="line">USART_ITConfig(USART3,USART_IT_IDLE,ENABLE);     <span class="comment">//空闲中断</span></span><br><span class="line"></span><br><span class="line">USART_InitTypeDef USART_InitStruct;</span><br><span class="line">USART_InitStruct.USART_BaudRate = <span class="number">9600</span>; </span><br><span class="line">USART_InitStruct.USART_HardwareFlowControl = DISABLE;</span><br><span class="line">USART_InitStruct.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;  <span class="comment">//接收和发送</span></span><br><span class="line">USART_InitStruct.USART_Parity = USART_Parity_No;  <span class="comment">//不校验</span></span><br><span class="line">USART_InitStruct.USART_StopBits = <span class="number">8</span>;</span><br><span class="line">USART_InitStruct.USART_WordLength = USART_WordLength_8b;</span><br><span class="line">USART_Init(USART3,&amp;USART_InitStruct);</span><br><span class="line"></span><br><span class="line">USART_Cmd(USART3,ENABLE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//中断函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">USART3_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//接收判断</span></span><br><span class="line"><span class="keyword">if</span> (USART_GetITStatus(USART3,USART_IT_RXNE) == SET)</span><br><span class="line">&#123;</span><br><span class="line">USART_ClearITPendingBit(USART3,USART_IT_RXNE);  <span class="comment">//清除后为了下一次接收数据做准备</span></span><br><span class="line">MYUSART3.Data[MYUSART3.Length++] = USART_ReceiveData(USART3);   <span class="comment">//我接收好一次数据后，指针指向新的位置</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (USART_GetITStatus(USART3,USART_IT_IDLE) == SET)</span><br><span class="line">&#123;</span><br><span class="line">MYUSART3.Data[MYUSART3.Length] = <span class="string">&#x27;\0&#x27;</span>;  <span class="comment">//字符串的最后一位是&#x27;\0&#x27;</span></span><br><span class="line">MYUSART3.flag = <span class="number">1</span>;</span><br><span class="line">MYUSART3.Length = <span class="number">0</span>;</span><br><span class="line">USART_ReceiveData(USART3);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//空闲判断</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//发送函数</span></span><br></pre></td></tr></table></figure><br>这样，我们便完成了Serial的定义，我们继续再main.c里面完成编码</p><h1 id="蓝牙小车的最终引用"><a href="#蓝牙小车的最终引用" class="headerlink" title="蓝牙小车的最终引用"></a>蓝牙小车的最终引用</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Serial.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Motor.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Myu3.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);  <span class="comment">//中断优先级分组分2组</span></span><br><span class="line"><span class="comment">//Serial_Init();</span></span><br><span class="line">USART3_init(<span class="number">9600</span>);</span><br><span class="line">Motor_Init();</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (MyUsart3.flag)</span><br><span class="line">&#123;</span><br><span class="line">MyUsart3.flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>((<span class="type">const</span> <span class="type">char</span>*)MyUsart3.buff,<span class="string">&quot;ONA&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Motor_Run(<span class="number">80</span>,<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>((<span class="type">const</span> <span class="type">char</span>*)MyUsart3.buff,<span class="string">&quot;ONB&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Motor_Back(<span class="number">80</span>,<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>((<span class="type">const</span> <span class="type">char</span>*)MyUsart3.buff,<span class="string">&quot;ONC&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Motor_Spin_Left(<span class="number">80</span>,<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>((<span class="type">const</span> <span class="type">char</span>*)MyUsart3.buff,<span class="string">&quot;OND&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Motor_Spin_Right(<span class="number">80</span>,<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>((<span class="type">const</span> <span class="type">char</span>*)MyUsart3.buff,<span class="string">&quot;ONF&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Motor_Brake(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>((<span class="type">const</span> <span class="type">char</span>*)MyUsart3.buff,<span class="string">&quot;ONE&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Motor_Brake(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p>最后，感谢你阅读完整个Blog，希望我的文章对你有所启发，有所帮助。感谢!<br><img src="https://image.gcores.com/1248b44c-fe38-453e-8092-b68d093d7d44.jpg?x-oss-process=image/resize,limit_1,m_lfit,w_1600/quality,q_90/format,webp" alt="有时候也要回头" title="蓦然回首"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;小车基本运动之最重要的—-PWM&quot;&gt;&lt;a href=&quot;#小车基本运动之最重要的—-PWM&quot; class=&quot;headerlink&quot; title=&quot;小车基本运动之最重要的—-PWM&quot;&gt;&lt;/a&gt;小车基本运动之最重要的—-PWM&lt;/h1&gt;&lt;h2 id=&quot;1-PWM（Pul</summary>
      
    
    
    
    
    <category term="Technology" scheme="https://madao-luv.github.io/tags/Technology/"/>
    
  </entry>
  
  <entry>
    <title>STM32的一些必备知识与自我认知</title>
    <link href="https://madao-luv.github.io/posts/b0e2bb20.html"/>
    <id>https://madao-luv.github.io/posts/b0e2bb20.html</id>
    <published>2024-04-29T15:32:58.413Z</published>
    <updated>2024-06-04T01:19:22.875Z</updated>
    
    <content type="html"><![CDATA[<p class='p center logo large'>STM32的主要外设</p><p><strong>1.NVIC—-嵌套向量中断控制器    </strong>2.SysTick—-系统滴答定时器: 它们是内核里的外设<br><strong>3.RCC—-复位和时钟控制 这个外设十分重要,因为其他的外设再上电的情况下默认是没有时钟的，那么不给时钟的情况下，操作其他外设是无效的，外设不会工作,因此我们需要RCC来配置相应外设的时钟—-使能其时钟    </strong>4.GPIO—-通用IO口(用于输入和输出),5.AFIO—-复用IO口(因为每个端口除了GPIO口所定义的功能以外，还有别的功能也可以在该端口实现，就是通过AFIO进行配置，复用的意思就是再次使用-个人理解),其次还有中断端口配置<br><strong>6.EXTI—-外部中断，当引脚有电平变化时,触发中断  </strong>7.TIM—-定时器(十分重要,因为是经常使用,功能最大的外设)—-用处:生成PWM波形,测频率,配置成专用编码器接口<br><strong>8.ADC—-模数转化器(Analog Digital Conversioner)—-举个例子:汽车发动机的冷冻装置,热电偶的原理  </strong>9.DMA—-直接内存访问(类似于STM32F103C8的小秘书,帮助STM32F103C8完成大量数据的搬运,减轻STM32F103C8的压力)<br><strong>10.USART—-同步/异步串口通信(实际上用异步串口比较多),这个可以用于串口通信,串口下载程序  </strong>11.I2C通信,以及12.SPI通信,以及13.CAN通信(这个应用于汽车领域较多),14.USB通信<br><strong>15.RTC—-实时时钟(原理是时间戳秒数的总数来计算—-年,月,日,时,分,秒),可以做车载时钟  </strong>16.PWR—-电源控制(三种模式:1.睡眠模式,2.停止模式,3.待机模式)<br><strong>17.IWDG—-独立看门狗,WWDG—-窗口看门狗,防止程序进入死循环  </strong>18.BKP—-备份寄存器,可以与RTC相配合实现电子时钟效果<br><strong>19.DAC—-(Digital Analog conversion)数模转化器  </strong>20.SDIO—-SD步接口<br><strong>21.USB OTG—-USB主机接口  </strong>22.FSMC—-可变静态存储控制器  </p>]]></content>
    
    
    <summary type="html">基础外设与解释</summary>
    
    
    
    
    <category term="Technology" scheme="https://madao-luv.github.io/tags/Technology/"/>
    
  </entry>
  
  <entry>
    <title>STM32知识每日更新</title>
    <link href="https://madao-luv.github.io/posts/4055ee82.html"/>
    <id>https://madao-luv.github.io/posts/4055ee82.html</id>
    <published>2024-04-28T14:33:55.300Z</published>
    <updated>2024-06-04T01:19:22.853Z</updated>
    
    <content type="html"><![CDATA[<p>**Time:2024.4.28<br><p class='p center h3'>1.GPIO端口进行编程作为模拟输入功能，内部操作包括:1.输出缓存器被禁止 2.施密特触发器输入停用，I/O引脚的每个模拟输入的功耗变为零 3.弱上拉和下拉电阻被关闭 4.对输入数据寄存器的读访问值为'0'</p><br><p class='p center h3'>2.stm32GPIO支持4种输出模式:开漏输出，开漏复用输出，推挽输出，推挽复用输出。 Tips: 下拉只能用来输入'</p></p><ol><li><p>STM32GPIO支持三种最大翻转速度:2MHz,10Mhz,50Mhz，所以最大不能超过50Mhz， Tips:不存在GPIO_IN_INIT_LOW,实际上当引脚设置为输入时，其状态对应当时引脚外部的电平状态。</p></li><li><p>Vdd—-器件内部工作电压  </p></li><li>VBAT—-电池工作模式专用引脚</li><li>VSS,VCC分别代表接地电压和输入电压</li><li>VEE—-负电压</li></ol>]]></content>
    
    
    <summary type="html">一些STM32的知识</summary>
    
    
    
    
    <category term="Technology" scheme="https://madao-luv.github.io/tags/Technology/"/>
    
  </entry>
  
  <entry>
    <title>flutter类的细节</title>
    <link href="https://madao-luv.github.io/posts/9bcefa22.html"/>
    <id>https://madao-luv.github.io/posts/9bcefa22.html</id>
    <published>2024-04-21T16:26:25.000Z</published>
    <updated>2024-06-04T01:19:22.873Z</updated>
    
    <content type="html"><![CDATA[<p class='p center logo large'>Flutter近日学习所遇到的问题</p><p class='p center h3'>是关于flutter里遇到的抽象类里面，关于继承和多态的应用。其中的语言是关于dart</p><span class='p center h3'>首先，我创建一个class Person的类</span><p class='p center h3'>1.第一种:继承---class Man extengds Person 对于它而言便是Person里面的方法以及属性都需要实现， 而第二种便是:多态---class Man implements Person，对于它来说是来实现接口的，若各位学有余力可以去自学一下"设计模式"这门课，废话不多说，我们来具体看看它的具体代码实现</p><p>比如说这个代码:<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    eat();</span><br><span class="line">    run(); <span class="comment">//我在这里进行了抽象函数的设定</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//然后我定义一个子类叫作man</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="keyword">extends</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    eat()&#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;我吃饭了&quot;</span>); <span class="comment">//必须是具体的实现操作</span></span><br><span class="line">    &#125;</span><br><span class="line">    run()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;吃完饭运动一下&quot;</span>); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//这个就是类的继承</span></span><br></pre></td></tr></table></figure></p><p>然后就是类的继承<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    eat();</span><br><span class="line">    run();</span><br><span class="line"></span><br><span class="line">&#125;<span class="comment">//这里我们是封装这个包，可以使用import方法引入</span></span><br></pre></td></tr></table></figure><br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//下面就是举例子如何引入封装</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;Person.h&quot;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="title">implement</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    eat()&#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;fa&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    run()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;man&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>这里便是多态的实现，我创建了一个接口，所以便用了implement的方法来实现函数的创建</p>]]></content>
    
    
    <summary type="html">flutter里抽象类的解释</summary>
    
    
    
    
    <category term="Technology" scheme="https://madao-luv.github.io/tags/Technology/"/>
    
  </entry>
  
  <entry>
    <title>随心一听</title>
    <link href="https://madao-luv.github.io/posts/5e52f62.html"/>
    <id>https://madao-luv.github.io/posts/5e52f62.html</id>
    <published>2024-03-21T16:14:58.000Z</published>
    <updated>2024-07-10T12:42:04.328Z</updated>
    
    <content type="html"><![CDATA[<h1 id="POEM—-To-find-and-Not-to-yield"><a href="#POEM—-To-find-and-Not-to-yield" class="headerlink" title="POEM—-To find,and Not to yield"></a>POEM—-To find,and Not to yield</h1><p><strong>2024-5-10</strong> Some day I shall sing to you in the sunrise of some other world “I have seen you before in the light of the earth,in the love of man.” —-Tagore</p><p><strong>2024-5-19</strong> I love you,you are like the corolla of autumn candlelight of the light,and daily food in my empty soul.</p><p><strong>2024-5-19</strong> If you remember everything ,I wanted to say ,and if you are really like me ,then before you leave tomorrow,or when you are just ready to shut the door of the taxi and have already said goodbye to everyone else and there is not a thing left to say in this life ,then,just once ,turn to me , even in jest , or as an afterthought ,which would have meant everything to me when we were together, and , as you did back then,look me in the face,hold my gaze,and call me by your name.</p><p><strong>2024-5-20</strong> We been dancing for so long under star.</p><p><strong>2024-5-20</strong> Promise not to shed a tear.</p><h1 id="詩—-斯人若彩虹，遇上方知有"><a href="#詩—-斯人若彩虹，遇上方知有" class="headerlink" title="詩—-斯人若彩虹，遇上方知有"></a>詩—-斯人若彩虹，遇上方知有</h1><p><strong>0000-0-00</strong> 不要温柔地走进那个良夜。</p><p><strong>2024-5-10</strong> 世人万千种，浮云莫去求，斯人若彩虹，遇上方知有。</p><p><strong>2024-5-10</strong> 去奋斗，去追求，去发现，以及永不屈服—-《死亡诗社》</p><p><strong>2024-5-10</strong> 花满市，月侵衣，少年情事老来悲。</p><p><strong>2024-5-10</strong> 读而未晓则思，思而未晓则读。</p><p><strong>2024-5-18</strong> 这个森林的樱今天也结束了…..也许不是什么巧遇吧……</p><p><strong>2024-6-14</strong> 待浮花，浪蕊都尽，伴君幽独。</p><p><strong>2024-6-17</strong> 须信百年俱是梦，天地阔，且徜徉。</p><p><strong>2024-6-17</strong> 花间明月，松下凉风，输我北窗一枕。</p><p><strong>2024-6-17</strong> 试问岭南应不好，却道：此心按处是吾乡。</p><p><strong>2024-6-17</strong> 莫道桑榆晚，为霞尚满天。</p><p><strong>2024-7-10</strong> 但去莫复问，白云无尽时。</p><p><strong>2024-7-10</strong> 把酒祝东风，且共从容。</p><p><strong>2024-7-10</strong> 飞蓬各自远,且尽手中杯。</p><p><strong>2024-7-10</strong> 不思量，自难忘。<br><img src="https://img.3dmgame.com/uploads/images/news/20220427/1651046376_991874.jpg" alt="LIFE" title="LIVE?"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;POEM—-To-find-and-Not-to-yield&quot;&gt;&lt;a href=&quot;#POEM—-To-find-and-Not-to-yield&quot; class=&quot;headerlink&quot; title=&quot;POEM—-To find,and Not to yield&quot;&gt;</summary>
      
    
    
    
    
    <category term="life" scheme="https://madao-luv.github.io/tags/life/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://madao-luv.github.io/posts/0.html"/>
    <id>https://madao-luv.github.io/posts/0.html</id>
    <published>2024-03-19T16:35:56.179Z</published>
    <updated>2024-03-19T16:43:24.996Z</updated>
    
    <content type="html"><![CDATA[{"name":"MADAO`Blog","short_name":"夜见山","theme_color":"#3b70fc","background_color":"#3b70fc","display":"standalone","scope":"/","start_url":"/","icons":[{"src":"/img/siteicon/16.png","sizes":"16x16","type":"image/png"},{"src":"/img/siteicon/32.png","sizes":"32x32","type":"image/png"},{"src":"/img/siteicon/48.png","sizes":"48x48","type":"image/png"},{"src":"/img/siteicon/64.png","sizes":"64x64","type":"image/png"},{"src":"/img/siteicon/128.png","sizes":"128x128","type":"image/png"},{"src":"/img/siteicon/144.png","sizes":"144x144","type":"image/png"},{"src":"/img/siteicon/512.png","sizes":"512x512","type":"image/png"}],"splash_pages":null}]]></content>
    
    
      
      
    <summary type="html">{&quot;name&quot;:&quot;MADAO`Blog&quot;,&quot;short_name&quot;:&quot;夜见山&quot;,&quot;theme_color&quot;:&quot;#3b70fc&quot;,&quot;background_color&quot;:&quot;#3b70fc&quot;,&quot;display&quot;:&quot;standalone&quot;,&quot;scope&quot;:&quot;/&quot;,&quot;start_url&quot;:</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://madao-luv.github.io/posts/4a17b156.html"/>
    <id>https://madao-luv.github.io/posts/4a17b156.html</id>
    <published>2024-03-18T16:23:00.968Z</published>
    <updated>2024-03-19T09:47:12.903Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
